<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>SpRestLib Blog</title>
        <link>https://gitbrent.github.io/SpRestLib/blog</link>
        <description>The best place to stay up-to-date with the latest SpRestLib news and events.</description>
        <lastBuildDate>Mon, 10 Dec 2018 06:00:00 GMT</lastBuildDate>
        <docs>http://blogs.law.harvard.edu/tech/rss</docs>
        <generator>Feed for Node.js</generator>
        <image>
            <title>SpRestLib Blog</title>
            <url>https://gitbrent.github.io/SpRestLib/img/sprestlib.svg</url>
            <link>https://gitbrent.github.io/SpRestLib/blog</link>
        </image>
        <copyright>Copyright Â© 2019 Brent Ely</copyright>
        <item>
            <title><![CDATA[Uploading a file to a SharePoint library using JavaScript]]></title>
            <link>https://gitbrent.github.io/SpRestLib/blog/2018/12/10/upload-file-to-sharepoint-library.html</link>
            <guid>https://gitbrent.github.io/SpRestLib/blog/2018/12/10/upload-file-to-sharepoint-library.html</guid>
            <pubDate>Mon, 10 Dec 2018 06:00:00 GMT</pubDate>
            <description><![CDATA[<p>Howto upload a file into a SharePoint Library using SpRestLib.  The <code>upload()</code> method
accepts an ArrayBuffer from both Node.js and client browsers.</p>
]]></description>
        </item>
        <item>
            <title><![CDATA[Downloading a file from SharePoint library using JavaScript and REST API]]></title>
            <link>https://gitbrent.github.io/SpRestLib/blog/2018/11/17/download-sharepoint-file-using-javascript.html</link>
            <guid>https://gitbrent.github.io/SpRestLib/blog/2018/11/17/download-sharepoint-file-using-javascript.html</guid>
            <pubDate>Sat, 17 Nov 2018 06:00:00 GMT</pubDate>
            <description><![CDATA[<p>Howto download a file from SharePoint Library using REST. This technique produces
a BLOB that can be streamed/saved directly from a web browser and works with both
text and binary files.</p>
]]></description>
        </item>
        <item>
            <title><![CDATA[Converting SharePoint 2010 API column names to SharePoint 2013 API column names]]></title>
            <link>https://gitbrent.github.io/SpRestLib/blog/2018/11/03/convert-sp2010-column-names-to-sp2013.html</link>
            <guid>https://gitbrent.github.io/SpRestLib/blog/2018/11/03/convert-sp2010-column-names-to-sp2013.html</guid>
            <pubDate>Sat, 03 Nov 2018 06:00:00 GMT</pubDate>
            <description><![CDATA[<p>Converting SharePoint 2010 API (<code>ListData.svc</code>) column names to SharePoint 2013 API (<code>_api</code>).</p>
]]></description>
        </item>
        <item>
            <title><![CDATA[SharePoint List Unique Permissions REST Query]]></title>
            <link>https://gitbrent.github.io/SpRestLib/blog/2018/10/28/sharepoint-list-unique-perms-rest-query.html</link>
            <guid>https://gitbrent.github.io/SpRestLib/blog/2018/10/28/sharepoint-list-unique-perms-rest-query.html</guid>
            <pubDate>Sun, 28 Oct 2018 06:00:00 GMT</pubDate>
            <description><![CDATA[<p>How to determine if a SharePoint List/Library has unique, non-inherited permissions (role assignments).</p>
]]></description>
        </item>
        <item>
            <title><![CDATA[Adding a User to SharePoint Group Using REST with SpRestLib]]></title>
            <link>https://gitbrent.github.io/SpRestLib/blog/2018/09/03/add-user-to-sharepoint-group-using-rest.html</link>
            <guid>https://gitbrent.github.io/SpRestLib/blog/2018/09/03/add-user-to-sharepoint-group-using-rest.html</guid>
            <pubDate>Mon, 03 Sep 2018 06:00:00 GMT</pubDate>
            <description><![CDATA[<p>Adding a User to an existing SharePoint Group can be done using a SpRestLib REST call in
just a few lines of code.</p>
]]></description>
        </item>
        <item>
            <title><![CDATA[Creating SharePoint jQuery People-Picker with SpRestLib]]></title>
            <link>https://gitbrent.github.io/SpRestLib/blog/2018/06/26/create-sharepoint-jquery-people-picker.html</link>
            <guid>https://gitbrent.github.io/SpRestLib/blog/2018/06/26/create-sharepoint-jquery-people-picker.html</guid>
            <pubDate>Tue, 26 Jun 2018 06:00:00 GMT</pubDate>
            <description><![CDATA[<p>Create a fully-functional People Picker against your local SharePoint ActiveDirectory structure using
jQuery-UI <code>autocomplete</code> and SpRestLib.</p>
]]></description>
        </item>
        <item>
            <title><![CDATA[Creating SharePoint List Columns Using REST]]></title>
            <link>https://gitbrent.github.io/SpRestLib/blog/2018/04/20/create-sharepoint-list-columns-using-rest.html</link>
            <guid>https://gitbrent.github.io/SpRestLib/blog/2018/04/20/create-sharepoint-list-columns-using-rest.html</guid>
            <pubDate>Fri, 20 Apr 2018 06:00:00 GMT</pubDate>
            <description><![CDATA[<p>List and Library fields/columns can be created using the REST API.  A feature
which is especially useful in many scenarios, such as having to update many subsites with new fields,
doing migration work, etc.</p>
]]></description>
        </item>
        <item>
            <title><![CDATA[Uploading a file to a SharePoint library using REST]]></title>
            <link>https://gitbrent.github.io/SpRestLib/blog/2018/03/19/upload-file-to-sharepoint-library-using-rest.html</link>
            <guid>https://gitbrent.github.io/SpRestLib/blog/2018/03/19/upload-file-to-sharepoint-library-using-rest.html</guid>
            <pubDate>Mon, 19 Mar 2018 06:00:00 GMT</pubDate>
            <description><![CDATA[<p>Howto upload a file into a SharePoint Library using REST.  Both Node.js and
client browsers can encode and upload files easily.</p>
]]></description>
        </item>
    </channel>
</rss>