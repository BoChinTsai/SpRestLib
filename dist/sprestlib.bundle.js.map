{"version":3,"sources":["sprestlib.bundle.js"],"names":["e","n","t","apply","arguments","o","this","TypeError","_state","_handled","_value","_deferreds","s","i","push","_immediateFn","onFulfilled","onRejected","u","promise","r","then","f","length","_unhandledRejectionFn","c","a","setTimeout","prototype","constructor","all","Array","slice","call","resolve","reject","race","setImmediate","console","warn","_setImmediateFn","_setUnhandledRejectionFn","module","exports","Promise","NODEJS","require","parseErrorMessage","jqXHR","strErrText","status","responseText","JSON","parse","error","split","value","ex","DEBUG","doRenewDigestToken","UpdateFormDigest","_spPageContextInfo","webServerRelativeUrl","ENUM_BASETYPES","0","1","3","4","5","ENUM_PRINCIPALTYPES","2","8","15","APP_OPTS","baseUrl","busySpinnerHtml","cache","cleanColHtml","currencyChar","language","maxRetries","maxRows","metadata","nodeCookie","nodeEnabled","nodeServer","retryAfter","gRegexGUID","gRetryCounter","sprLib","version","APP_VER","inStr","replace","log","list","inOpt","getListItemType","rest","url","_urlBase","result","isArray","type","ListItemEntityTypeFullName","catch","err","_newList","_requestDigest","requestDigest","document","getElementById","guid","name","test","hasOwnProperty","cols","arrData","arrColumns","Fields","results","forEach","Hidden","InternalName","indexOf","dispName","Title","dataName","dataType","TypeAsString","isAppend","AppendOnly","isNumPct","SchemaXml","toLowerCase","isReadOnly","ReadOnlyField","isRequired","Required","isUnique","EnforceUniqueValues","defaultValue","DefaultValue","maxLength","MaxLength","strErr","info","perms","queryCols","objItem","idx","Object","defineProperty","getOwnPropertyDescriptor","RoleDefinitionBindings","Member","PrincipalId","PrincipalType","items","inObj","listGUID","queryFilter","objCol","toString","listCols","objListCols","colStr","strTmp","substring","objNew","keys","key","filter","index","self","spArrData","spObjData","getVersions","objAjaxQuery","headers","Accept","X-RequestDigest","arrExpands","strExpands","queryNext","prevId","maxItems","col","lastIndexOf","strFieldName","encodeURI","queryOrderby","queryLimit","arrResults","__deferred","objRow","intID","__metadata","uri","Number","pop","__next","arrCol","colVal","objResult","dataFunc","Date","listDataType","arrAppendCols","arrAppendColNames","keyName","documentElement","querySelectorAll","row","getAttribute","prvComm","rowNote","verDate","toISOString","verName","verText","getItems","create","jsonData","stringify","etag","objMetadata","data","Id","ID","update","iD","id","X-HTTP-Method","IF-MATCH","delete","recycle","digest","restType","restUrl","contentType","strExpandName","options","hostname","path","method","request","https","res","rawData","setEncoding","on","chunk","message","write","end","XMLHttpRequest","open","setRequestHeader","onload","responseXML","onerror","send","arrObjResult","d","strField","arrKeys","lastChild","val","objSkip","str","objData","renewSecurityToken","site","inUrl","_newSite","arrAllArrays","objSite","Owner","AssociatedMemberGroup","AssociatedOwnerGroup","AssociatedVisitorGroup","LastItemUserModifiedDate","lists","item","ServerRelativeUrl","RootFolder","BaseType","subsites","Name","UrlAbs","UrlRel","Created","Modified","Language","SiteLogoUrl","roles","groups","arrPromises","strFilter","title","arrGroups","grp","Description","OwnerTitle","AllowMembersEditMembership","Users","arrUsers","user","idy","LoginName","group","users","arrSiteUsers","objTempUsers","obj","Groups","_newUser","_urlRest","email","login","objUser","profile","arrProfileKeys","arrQueryKeys","userAcctName","encodeURIComponent","arrProfileProps","objProfile","ValueType","UserProfileProperties","objProfileProps","Key","Value","nodeConfig","cookie","server","isElectron"],"mappings":"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","file":"sprestlib.bundle.js","sourcesContent":["!function(e){function n(){}function t(e,n){return function(){e.apply(n,arguments)}}function o(e){if(\"object\"!=typeof this)throw new TypeError(\"Promises must be constructed via new\");if(\"function\"!=typeof e)throw new TypeError(\"not a function\");this._state=0,this._handled=!1,this._value=void 0,this._deferreds=[],s(e,this)}function i(e,n){for(;3===e._state;)e=e._value;return 0===e._state?void e._deferreds.push(n):(e._handled=!0,void o._immediateFn(function(){var t=1===e._state?n.onFulfilled:n.onRejected;if(null===t)return void(1===e._state?r:u)(n.promise,e._value);var o;try{o=t(e._value)}catch(i){return void u(n.promise,i)}r(n.promise,o)}))}function r(e,n){try{if(n===e)throw new TypeError(\"A promise cannot be resolved with itself.\");if(n&&(\"object\"==typeof n||\"function\"==typeof n)){var i=n.then;if(n instanceof o)return e._state=3,e._value=n,void f(e);if(\"function\"==typeof i)return void s(t(i,n),e)}e._state=1,e._value=n,f(e)}catch(r){u(e,r)}}function u(e,n){e._state=2,e._value=n,f(e)}function f(e){2===e._state&&0===e._deferreds.length&&o._immediateFn(function(){e._handled||o._unhandledRejectionFn(e._value)});for(var n=0,t=e._deferreds.length;n<t;n++)i(e,e._deferreds[n]);e._deferreds=null}function c(e,n,t){this.onFulfilled=\"function\"==typeof e?e:null,this.onRejected=\"function\"==typeof n?n:null,this.promise=t}function s(e,n){var t=!1;try{e(function(e){t||(t=!0,r(n,e))},function(e){t||(t=!0,u(n,e))})}catch(o){if(t)return;t=!0,u(n,o)}}var a=setTimeout;o.prototype[\"catch\"]=function(e){return this.then(null,e)},o.prototype.then=function(e,t){var o=new this.constructor(n);return i(this,new c(e,t,o)),o},o.all=function(e){var n=Array.prototype.slice.call(e);return new o(function(e,t){function o(r,u){try{if(u&&(\"object\"==typeof u||\"function\"==typeof u)){var f=u.then;if(\"function\"==typeof f)return void f.call(u,function(e){o(r,e)},t)}n[r]=u,0===--i&&e(n)}catch(c){t(c)}}if(0===n.length)return e([]);for(var i=n.length,r=0;r<n.length;r++)o(r,n[r])})},o.resolve=function(e){return e&&\"object\"==typeof e&&e.constructor===o?e:new o(function(n){n(e)})},o.reject=function(e){return new o(function(n,t){t(e)})},o.race=function(e){return new o(function(n,t){for(var o=0,i=e.length;o<i;o++)e[o].then(n,t)})},o._immediateFn=\"function\"==typeof setImmediate&&function(e){setImmediate(e)}||function(e){a(e,0)},o._unhandledRejectionFn=function(e){\"undefined\"!=typeof console&&console&&console.warn(\"Possible Unhandled Promise Rejection:\",e)},o._setImmediateFn=function(e){o._immediateFn=e},o._setUnhandledRejectionFn=function(e){o._unhandledRejectionFn=e},\"undefined\"!=typeof module&&module.exports?module.exports=o:e.Promise||(e.Promise=o)}(this);\n/*\\\r\n|*|  :: SpRestLib.js ::\r\n|*|\r\n|*|  JavaScript Library for SharePoint Web Serices\r\n|*|  https://github.com/gitbrent/SpRestLib\r\n|*|\r\n|*|  This library is released under the MIT Public License (MIT)\r\n|*|\r\n|*|  SpRestLib (C) 2016-2018 Brent Ely -- https://github.com/gitbrent\r\n|*|\r\n|*|  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n|*|  of this software and associated documentation files (the \"Software\"), to deal\r\n|*|  in the Software without restriction, including without limitation the rights\r\n|*|  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n|*|  copies of the Software, and to permit persons to whom the Software is\r\n|*|  furnished to do so, subject to the following conditions:\r\n|*|\r\n|*|  The above copyright notice and this permission notice shall be included in all\r\n|*|  copies or substantial portions of the Software.\r\n|*|\r\n|*|  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n|*|  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n|*|  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n|*|  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n|*|  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n|*|  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n|*|  SOFTWARE.\r\n\\*/\r\n\r\n// Detect Node.js\r\n// NOTE: `NODEJS` determines which network library to use, so using https-detection is aprops.\r\nvar NODEJS = ( typeof module !== 'undefined' && module.exports && typeof require === 'function' && require('https') );\r\n\r\n(function(){\r\n\t// APP VERSION/BUILD\r\n\tvar APP_VER = \"1.7.0-beta\";\r\n\tvar APP_BLD = \"20180408\";\r\n\tvar DEBUG = false; // (verbose mode/lots of logging)\r\n\t// ENUMERATIONS\r\n\t// REF: [`SP.BaseType`](https://msdn.microsoft.com/en-us/library/office/jj246925.aspx)\r\n\tvar ENUM_BASETYPES = {\r\n\t\t\"0\": \"List\",\r\n\t\t\"1\": \"Library\",\r\n\t\t\"3\": \"Discussion Board\",\r\n\t\t\"4\": \"Survey\",\r\n\t\t\"5\": \"Issue\"\r\n\t};\r\n\t// REF: [`SP.Utilities.PrincipalType`](https://msdn.microsoft.com/en-us/library/ee553710(v=office.14).aspx)\r\n\tvar ENUM_PRINCIPALTYPES = {\r\n\t\t\"0\" : \"None\",\r\n\t\t\"1\" : \"User\",\r\n\t\t\"2\" : \"Distribution List\",\r\n\t\t\"4\" : \"Security Group\",\r\n\t\t\"8\" : \"SharePoint Group\",\r\n\t\t\"15\": \"All\"\r\n\t};\r\n\t// APP FUNCTIONALITY\r\n\tvar APP_FILTEROPS = {\r\n\t\t\"eq\" : \"==\",\r\n\t\t\"ne\" : \"!=\",\r\n\t\t\"gt\" : \">\",\r\n\t\t\"gte\": \">=\",\r\n\t\t\"lt\" : \"<\",\r\n\t\t\"lte\": \"<=\"\r\n\t};\r\n\t// USER-CONFIGURABLE: UI OPTIONS\r\n\tvar APP_OPTS = {\r\n\t\tbaseUrl:         '..',\r\n\t\tbusySpinnerHtml: '<div class=\"sprlib-spinner\"><div class=\"sprlib-bounce1\"></div><div class=\"sprlib-bounce2\"></div><div class=\"sprlib-bounce3\"></div></div>',\r\n\t\tcache:           false,\r\n\t\tcleanColHtml:    true,\r\n\t\tcurrencyChar:    '$',\r\n\t\tlanguage:        'en',\r\n\t\tmaxRetries:      2,\r\n\t\tmaxRows:         1000,\r\n\t\tmetadata:        false,\r\n\t\tnodeCookie:      '',\r\n\t\tnodeEnabled:     true,\r\n\t\tnodeServer:      '',\r\n\t\tretryAfter:      1000\r\n\t};\r\n\t// GLOBAL VARS\r\n\tvar gRegexGUID = /^[0-9a-f]{8}-([0-9a-f]{4}-){3}[0-9a-f]{12}$/i;\r\n\tvar gRetryCounter = 0;\r\n\r\n\t/* ===============================================================================================\r\n\t|\r\n\t#     #\r\n\t#     #  ######  #       #####   ######  #####    ####\r\n\t#     #  #       #       #    #  #       #    #  #\r\n\t#######  #####   #       #    #  #####   #    #   ####\r\n\t#     #  #       #       #####   #       #####        #\r\n\t#     #  #       #       #       #       #   #   #    #\r\n\t#     #  ######  ######  #       ######  #    #   ####\r\n\t|\r\n\t==================================================================================================\r\n\t*/\r\n\r\n\tfunction parseErrorMessage(jqXHR) {\r\n\t\t// STEP 1:\r\n\t\tjqXHR = jqXHR || {};\r\n\r\n\t\t// STEP 2:\r\n\t\tvar strErrText = \"(\"+ jqXHR.status +\") \"+ jqXHR.responseText;\r\n\t\tvar strSpeCode = \"\";\r\n\r\n\t\t// STPE 3: Parse out SharePoint/IIS error code and message\r\n\t\ttry {\r\n\t\t\tstrSpeCode = JSON.parse(jqXHR.responseText).error['code'].split(',')[0];\r\n\t\t\tstrErrText = \"(\" + jqXHR.status + \") \" + JSON.parse(jqXHR.responseText).error['message'].value;\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tif (DEBUG) console.warn('Unable to parse jqXHR response:\\n' + jqXHR.responseText);\r\n\t\t}\r\n\r\n\t\t// Done!\r\n\t\treturn strErrText;\r\n\t}\r\n\r\n\t/*\r\n\t* HOWTO: generate a `requestDigest`\r\n\t* sprLib.rest({ url:'_api/contextinfo', type:'POST' }).then(arr => console.log(arr[0].GetContextWebInformation.FormDigestValue) );\r\n\t*/\r\n\tfunction doRenewDigestToken() {\r\n\t\treturn new Promise(function(resolve,reject) {\r\n\t\t\t// Use SP.js UpdateFormDigest function if available\r\n\t\t\t// @see http://www.wictorwilen.se/sharepoint-2013-how-to-refresh-the-request-digest-value-in-javascript\r\n\t\t\t// UpdateFormDigest() is syncronous per this SharePoint MVP, so just run and return\r\n\t\t\t// DEFAULT: UpdateFormDigest(_spPageContextInfo.webServerRelativeUrl, _spFormDigestRefreshInterval);\r\n\t\t\t// Use a very short refresh interval to force token renewal (otherwise, unless it's been 30 min or whatever, no new token will be provided by SP)\r\n\t\t\tUpdateFormDigest(_spPageContextInfo.webServerRelativeUrl, 10);\r\n\t\t\tresolve();\r\n\t\t});\r\n\t}\r\n\r\n\t/* ===============================================================================================\r\n\t|\r\n\t######                                             #     ######   ###\r\n\t#     #  #    #  #####   #       #   ####         # #    #     #   #\r\n\t#     #  #    #  #    #  #       #  #    #       #   #   #     #   #\r\n\t######   #    #  #####   #       #  #           #     #  ######    #\r\n\t#        #    #  #    #  #       #  #           #######  #         #\r\n\t#        #    #  #    #  #       #  #    #      #     #  #         #\r\n\t#         ####   #####   ######  #   ####       #     #  #        ###\r\n\t|\r\n\t==================================================================================================\r\n\t*/\r\n\r\n\tthis.sprLib = {};\r\n\tsprLib.version = APP_VER+'-'+APP_BLD;\r\n\r\n\t// API: OPTIONS\r\n\t/**\r\n\t* Getter/Setter for the app option APP_OPTS.baseUrl (our _api call base)\r\n\t*\r\n\t* @example - set baseUrl\r\n\t* sprLib.baseUrl('/sites/devtest');\r\n\t*\r\n\t* @example - get baseUrl\r\n\t* sprLib.baseUrl();\r\n\t* @returns '/sites/devtest'\r\n\t*\r\n\t* @param {string} `inStr` - URL to use as the root of API calls\r\n\t* @return {string} Return value of APP_OPTS.baseUrl\r\n\t*/\r\n\tsprLib.baseUrl = function baseUrl(inStr) {\r\n\t\t// CASE 1: Act as a GETTER when no value passed\r\n\t\tif ( typeof inStr !== 'string' || inStr == '' || !inStr ) return APP_OPTS.baseUrl;\r\n\r\n\t\t// CASE 2: Act as a SETTER\r\n\t\tAPP_OPTS.baseUrl = inStr.replace(/\\/+$/,'');\r\n\t\tif (DEBUG) console.log('APP_OPTS.baseUrl = '+APP_OPTS.baseUrl);\r\n\t}\r\n\r\n\t// API: LIST (CRUD, select, recycle)\r\n\t/**\r\n\t* @param `inOpt` (string) - required - ListName or ListGUID\r\n\t* @example - string - sprLib.list('Documents');\r\n\t*\r\n\t* @param `inOpt` (object) - required - { `name`, [`baseUrl`] }\r\n\t* @example - string - sprLib.list({ name:'23846527-228a-41a2-b5c1-7b55b6fea1a3' });\r\n\t* @example - string - sprLib.list({ guid:'23846527-228a-41a2-b5c1-7b55b6fea1a3' });\r\n\t* @example - string - sprLib.list({ name:'Documents' });\r\n\t* @example - string - sprLib.list({ name:'Documents', baseUrl:'/sites/dev/sandbox' });\r\n\t* @example - string - sprLib.list({ name:'Documents', baseUrl:'/sites/dev/sandbox', requestDigest:'8675309,05 Dec 2017 01:23:45 -0000' });\r\n\t*/\r\n\tsprLib.list = function list(inOpt) {\r\n\t\t// A: Options setup\r\n\t\tinOpt = inOpt || {};\r\n\t\tvar _newList = {};\r\n\t\tvar _urlBase = \"_api/lists\";\r\n\t\tvar _requestDigest = (inOpt.requestDigest || (typeof document !== 'undefined' && document.getElementById('__REQUESTDIGEST') ? document.getElementById('__REQUESTDIGEST').value : null));\r\n\t\tif ( inOpt.guid ) inOpt.name = inOpt.guid; // Allow `guid` as a synonym for `name` per user request\r\n\r\n\t\t// B: Param check\r\n\t\tif ( inOpt && typeof inOpt === 'string' ) {\r\n\t\t\t// DESIGN: Accept either [ListName] or [ListGUID]\r\n\t\t\t_urlBase += ( gRegexGUID.test(inOpt) ? \"(guid'\"+ inOpt +\"')\" : \"/getbytitle('\"+ inOpt.replace(/\\s/gi,'%20') +\"')\" );\r\n\t\t}\r\n\t\telse if ( inOpt && typeof inOpt === 'object' && inOpt.hasOwnProperty('name') ) {\r\n\t\t\t_urlBase = (inOpt.baseUrl ? inOpt.baseUrl.replace(/\\/+$/,'')+'/_api/lists' : _urlBase);\r\n\t\t\t_urlBase += ( gRegexGUID.test(inOpt.name) ? \"(guid'\"+ inOpt.name +\"')\" : \"/getbytitle('\"+ inOpt.name.replace(/\\s/gi,'%20') +\"')\" );\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.error(\"ERROR: A 'listName' or 'listGUID' is required! EX: `sprLib.list('Employees')` or `sprLib.list({ 'name':'Employees' })`\");\r\n\t\t\tconsole.error('ARGS:');\r\n\t\t\tconsole.error(inOpt);\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t* Used after `.create()` if no {type} was provided (enables ontinued use of the object in subsequent operations)\r\n\t\t* Used internally when users send CRUD methods objects without a `__metadata.type` value\r\n\t\t*/\r\n\t\tfunction getListItemType() {\r\n\t\t\treturn new Promise(function(resolve, reject) {\r\n\t\t\t\tsprLib.rest({\r\n\t\t\t\t\turl: _urlBase+\"?$select=ListItemEntityTypeFullName\"\r\n\t\t\t\t})\r\n\t\t\t\t.then(function(result){\r\n\t\t\t\t\tif (result && Array.isArray(result) && result.length == 1) resolve( {\"type\":result[0].ListItemEntityTypeFullName } );\r\n\t\t\t\t\telse reject('Invalid result!');\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function(err){\r\n\t\t\t\t\treject(err);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// STEP 1: Add public methods\r\n\r\n\t\t/**\r\n\t\t* Return array of column objects with info about each (title, REST/internal name, type, etc.)\r\n\t\t*\r\n\t\t* @example: sprLib.list('Employees').cols().then(function(cols){ console.table(cols) });\r\n\t\t*/\r\n\t\t_newList.cols = function() {\r\n\t\t\t// FieldTypeKind enumeration:\r\n\t\t\t// https://msdn.microsoft.com/en-us/library/microsoft.sharepoint.client.fieldtype.aspx\r\n\t\t\t// https://msdn.microsoft.com/en-us/library/office/jj245826.aspx#properties\r\n\t\t\treturn new Promise(function(resolve, reject) {\r\n\t\t\t\tsprLib.rest({\r\n\t\t\t\t\turl: _urlBase+\"?$select=Fields&$expand=Fields\",\r\n\t\t\t\t\tmetadata: false\r\n\t\t\t\t})\r\n\t\t\t\t.then(function(arrData){\r\n\t\t\t\t\tvar arrColumns = [];\r\n\r\n\t\t\t\t\t// STEP 1: Gather fields\r\n\t\t\t\t\t( arrData && arrData[0] && arrData[0].Fields && arrData[0].Fields.results ? arrData[0].Fields.results : [] )\r\n\t\t\t\t\t.forEach(function(result,i){\r\n\t\t\t\t\t\t// Filter: No Edit/Icon or internal cols (eg: '_ComplianceFlags')\r\n\t\t\t\t\t\tif ( !result.Hidden && result.InternalName != 'Edit' && result.InternalName != 'DocIcon' && result.InternalName.indexOf('_') != 0 ) {\r\n\t\t\t\t\t\t\tarrColumns.push({\r\n\t\t\t\t\t\t\t\tdispName:     result.Title,\r\n\t\t\t\t\t\t\t\tdataName:     result.InternalName,\r\n\t\t\t\t\t\t\t\tdataType:     result.TypeAsString,\r\n\t\t\t\t\t\t\t\tisAppend:     ( result.AppendOnly || false ),\r\n\t\t\t\t\t\t\t\tisNumPct:     ( result.SchemaXml.toLowerCase().indexOf('percentage=\"true\"') > -1 ),\r\n\t\t\t\t\t\t\t\tisReadOnly:   result.ReadOnlyField,\r\n\t\t\t\t\t\t\t\tisRequired:   result.Required,\r\n\t\t\t\t\t\t\t\tisUnique:     result.EnforceUniqueValues,\r\n\t\t\t\t\t\t\t\tdefaultValue: ( result.DefaultValue || null ),\r\n\t\t\t\t\t\t\t\tmaxLength:    ( result.MaxLength || null )\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// STEP 2: Resolve Promise\r\n\t\t\t\t\tresolve( arrColumns );\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function(strErr){\r\n\t\t\t\t\treject( strErr );\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t* Return an object containing information about the current List/Library\r\n\t\t*\r\n\t\t* @example: sprLib.list('Employees').info().then( objInfo => console.table(objInfo) );\r\n\t\t*/\r\n\t\t_newList.info = function() {\r\n\t\t\treturn new Promise(function(resolve, reject) {\r\n\t\t\t\tvar strFields = 'Id,AllowContentTypes,BaseTemplate,BaseType,Created,Description,DraftVersionVisibility,'\r\n\t\t\t\t\t+ 'EnableAttachments,EnableFolderCreation,EnableVersioning,ForceCheckout,HasUniqueRoleAssignments,Hidden,ItemCount,'\r\n\t\t\t\t\t+ 'LastItemDeletedDate,LastItemModifiedDate,LastItemUserModifiedDate,ListItemEntityTypeFullName,Title';\r\n\r\n\t\t\t\tsprLib.rest({\r\n\t\t\t\t\turl: _urlBase+\"?$select=\"+strFields,\r\n\t\t\t\t\tmetadata: false\r\n\t\t\t\t})\r\n\t\t\t\t.then(function(arrData){\r\n\t\t\t\t\tresolve( (arrData && arrData.length > 0 ? arrData[0] : []) );\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function(strErr){\r\n\t\t\t\t\treject( strErr );\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t* Get List permissions\r\n\t\t* Returns array of objects with `Member` and `Roles` properties\r\n\t\t*\r\n\t\t* @example - sprLib.list('Employees').perms().then( arr => console.log(arr) );\r\n\t\t* //.--------------------------------------------------------------------------------------------------------------------------------------------------------------------------.\r\n\t\t* //|                                        Member                                         |                                      Roles                                       |\r\n\t\t* //|---------------------------------------------------------------------------------------|----------------------------------------------------------------------------------|\r\n\t\t* //| {\"Title\":\"Dev Site Members\",\"PrincipalType\":\"SharePoint Group\",\"PrincipalId\":8}       | [{\"Hidden\":false,\"Name\":\"Design\"},{\"Hidden\":false,\"Name\":\"Edit\"}]                |\r\n\t\t* //| {\"Title\":\"Dev Site Owners\",\"PrincipalType\":\"SharePoint Group\",\"PrincipalId\":6}        | [{\"Hidden\":false,\"Name\":\"Full Control\"},{\"Hidden\":true,\"Name\":\"Limited Access\"}] |\r\n\t\t* //| {\"Title\":\"Dev Site Visitors\",\"PrincipalType\":\"SharePoint Group\",\"PrincipalId\":7}      | [{\"Hidden\":false,\"Name\":\"Read\"}]                                                 |\r\n\t\t* //| {\"Title\":\"Excel Services Viewers\",\"PrincipalType\":\"SharePoint Group\",\"PrincipalId\":5} | [{\"Hidden\":false,\"Name\":\"View Only\"}]                                            |\r\n\t\t* //'--------------------------------------------------------------------------------------------------------------------------------------------------------------------------'\r\n\t\t*/\r\n\t\t_newList.perms = function(inOpt) {\r\n\t\t\treturn new Promise(function(resolve, reject) {\r\n\t\t\t\tsprLib.rest({\r\n\t\t\t\t\turl: _urlBase+'/RoleAssignments?$select=',\r\n\t\t\t\t\tqueryCols: ['PrincipalId','Member/PrincipalType','Member/Title','RoleDefinitionBindings/Name','RoleDefinitionBindings/Hidden']\r\n\t\t\t\t})\r\n\t\t\t\t.then(function(arrData){\r\n\t\t\t\t\t// STEP 1: Transform: Results s/b 2 keys with props inside each\r\n\t\t\t\t\tarrData.forEach(function(objItem,idx){\r\n\t\t\t\t\t\t// A: \"Rename\" the `RoleDefinitionBindings` key to be user-friendly\r\n\t\t\t\t\t\tObject.defineProperty(objItem, 'Roles', Object.getOwnPropertyDescriptor(objItem, 'RoleDefinitionBindings'));\r\n\t\t\t\t\t\tdelete objItem.RoleDefinitionBindings;\r\n\r\n\t\t\t\t\t\t// B: Move `PrincipalId` inside {Member}\r\n\t\t\t\t\t\tobjItem.Member.PrincipalId = objItem.PrincipalId;\r\n\t\t\t\t\t\tdelete objItem.PrincipalId;\r\n\r\n\t\t\t\t\t\t// C: Decode PrincipalType into text\r\n\t\t\t\t\t\tobjItem.Member.PrincipalType = ENUM_PRINCIPALTYPES[objItem.Member.PrincipalType] || objItem.Member.PrincipalType;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// STEP 2: Resolve results (NOTE: empty array is the correct default result)\r\n\t\t\t\t\tresolve( arrData || [] );\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function(strErr){\r\n\t\t\t\t\treject( strErr );\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// SELECT -------------------------------------------------------------------\r\n\r\n\t\t/**\r\n\t\t* Get specified or all List/Library column values - optionally: filter, sort, limit\r\n\t\t*\r\n\t\t* Options:\r\n\t\t*\r\n\t\t* | property      | type    | reqd  | description       | example/allowed vals |\r\n\t\t* |---------------|---------|-------|-------------------|----------------------|\r\n\t\t* | `listCols`    | array   | no    | array of column names in OData style | `listCols: ['Name', 'Badge_x0020_Number']` |\r\n\t\t* | `listCols`    | object  | no    | object with column properties | `listCols: { badge: { dataName:'Badge_x0020_Number' } }` |\r\n\t\t* | `metadata`    | boolean | no    | whether to return `__metadata` | `metadata: true` |\r\n\t\t* | `queryFilter` | string  | no    | OData style filter    | `ID eq 1`, `Badge_x0020_Number eq 1234` |\r\n\t\t* | `queryLimit`  | number  | no    | OData style row limit | `10` would limit number of rows returned to 10 |\r\n\t\t* | `queryNext`   | object  | no    | Next/Skip options (paging) | `{ prevId:5000, maxItems:1000 }` |\r\n\t\t* | `queryOrderby`| string  | no    | OData style order by  | `Badge_x0020_Number`, `Badge_x0020_Number desc` [asc sort is SP2013 default] |\r\n\t\t*\r\n\t\t* @example - no args - omitting listCols/arguments means \"return all\" (mirrors SP behavior)\r\n\t\t* sprLib.list('Employees').getItems()\r\n\t\t*\r\n\t\t* @example - simple array of column names\r\n\t\t* sprLib.list('Employees').getItems(['Name', 'Badge_x0020_Number', 'Hire_x0020_Date'])\r\n\t\t*\r\n\t\t* @example using `listCols` - simple array of column names\r\n\t\t* sprLib.list('Employees').getItems({\r\n\t\t*   listCols: ['Name', 'Badge_x0020_Number', 'Hire_x0020_Date']\r\n\t\t* })\r\n\t\t*\r\n\t\t* @example using `listCols` - object with user designated key names and column options\r\n\t\t* sprLib.list('Employees').getItems({\r\n\t\t*   listCols: {\r\n\t\t*     name:  { dataName:'Name'               },\r\n\t\t*     badge: { dataName:'Badge_x0020_Number' }\r\n\t\t*   }\r\n\t\t* })\r\n\t\t*\r\n\t\t* @example - with some options\r\n\t\t* sprLib.list('Employees').getItems({\r\n\t\t*   listCols:     { badgeNum: { dataName:'Badge_x0020_Number' } },\r\n\t\t*   queryFilter:  \"Salary gt 100000\",\r\n\t\t*   queryOrderby: \"Hire_x0020_Date\",\r\n\t\t*   queryLimit:   100,\r\n\t\t*   metadata:     true\r\n\t\t* })\r\n\t\t*\r\n\t\t* listCols properties:\r\n\t\t*\r\n\t\t* | property         | type    | reqd  | description       | example/allowed vals |\r\n\t\t* |------------------|---------|-------|-------------------|----------------------|\r\n\t\t* | `dataName`       | string  | no    | SP.InternalName   | 'Hire_x0020_Date'    |\r\n\t\t* | `dispName`       | string  | no    | display name      | 'Hire Date'          |\r\n\t\t* | `currencyFormat` | string  | no    | date format       | `INTL`, `INTLTIME` TODO |\r\n\t\t* | `dateFormat`     | string  | no    | date format       | `INTL`, `INTLTIME` TODO |\r\n\t\t* // TODO: ^^^ lets combine to `format` and be context-sensitive (currency only works with currency etc.)\r\n\t\t*\r\n\t\t* listCols properties: used by Library internally\r\n\t\t*\r\n\t\t* | property     | type    | reqd  | description       | example/allowed vals |\r\n\t\t* |--------------|---------|-------|-------------------|----------------------|\r\n\t\t* | `dataType`   | string  | (app) | SP.FieldType      | `Integer`, `Text, `Note, `DateTime`, `Choice`, `Lookup`, `Boolean`, `Currency` et al. |\r\n\t\t* | `isAppend`   | boolean | (app) | Append Text Field | `true` or `false`    |\r\n\t\t* | `isNumPct`   | boolean | (app) | \"Show as Percent\" | `true` or `false`    |\r\n\t\t*\r\n\t\t* @see: Field Ref.: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx\r\n\t\t* @see: FieldTypes: https://msdn.microsoft.com/en-us/library/office/microsoft.sharepoint.client.fieldtype.aspx\r\n\t\t*/\r\n\t\t_newList.items = function(inObj) {\r\n\t\t\tvar listGUID = '';\r\n\t\t\treturn new Promise(function(resolve, reject) {\r\n\t\t\t\t// STEP 1: Create/Init Params\r\n\t\t\t\tinObj = inObj || {};\r\n\t\t\t\t// Deal with garbage here instead of in parse\r\n\t\t\t\tif ( inObj == '' || inObj == [] ) inObj = {};\r\n\t\t\t\t// Handle: `$filter` only accepts single quote (%27), double-quote (%22) will fail, so transform as needed\r\n\t\t\t\tif ( inObj.queryFilter ) inObj.queryFilter = inObj.queryFilter.replace(/\\\"/gi,\"'\");\r\n\r\n\t\t\t\t// STEP 2: Parse options/cols / Set Internal Arrays\r\n\t\t\t\t// NOTE: Duplicate col names dont bother SP, so there is no test/fix for that condition below\r\n\t\t\t\t{\r\n\t\t\t\t\t// CASE 1: Option: single string col name\r\n\t\t\t\t\tif ( typeof inObj === 'string' || typeof inObj === 'number' ) {\r\n\t\t\t\t\t\tvar objCol = {};\r\n\t\t\t\t\t\tobjCol[ inObj.toString() ] = { dataName:inObj.toString() };\r\n\t\t\t\t\t\tinObj = { listCols:objCol };\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// CASE 2: Options: array of col names\r\n\t\t\t\t\telse if ( Array.isArray(inObj) ) {\r\n\t\t\t\t\t\tvar objListCols = {};\r\n\t\t\t\t\t\tinObj.forEach(function(colStr,i){\r\n\t\t\t\t\t\t\tvar strTmp = ( colStr.indexOf('/') > -1 ? colStr.substring(0,colStr.indexOf('/')) : colStr );\r\n\t\t\t\t\t\t\t// Handle cases where there are 2 expands from same column. Ex: 'Manager/Id' and 'Manager/Title'\r\n\t\t\t\t\t\t\tif ( colStr ) objListCols[strTmp] = ( objListCols[strTmp] ? { dataName:objListCols[strTmp].dataName+','+colStr } : { dataName:colStr } );\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tinObj = { listCols: objListCols };\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// CASE 3: Options: `listCols` is a simple string\r\n\t\t\t\t\telse if ( typeof inObj.listCols === 'string' ) {\r\n\t\t\t\t\t\tvar objNew = {};\r\n\t\t\t\t\t\tObject.keys(inObj).forEach(function(key,idx){ objNew[key] = inObj[key]; });\r\n\t\t\t\t\t\tinObj.listCols = [inObj.listCols];\r\n\t\t\t\t\t\tvar objListCols = {};\r\n\t\t\t\t\t\tinObj.listCols.forEach(function(colStr,i){\r\n\t\t\t\t\t\t\tvar strTmp = ( colStr.indexOf('/') > -1 ? colStr.substring(0,colStr.indexOf('/')) : colStr );\r\n\t\t\t\t\t\t\t// Handle cases where there are 2 expands from same column. Ex: 'Manager/Id' and 'Manager/Title'\r\n\t\t\t\t\t\t\tif ( colStr ) objListCols[strTmp] = ( objListCols[strTmp] ? { dataName:objListCols[strTmp].dataName+','+colStr } : { dataName:colStr } );\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tobjNew.listCols = objListCols;\r\n\t\t\t\t\t\tinObj = objNew;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// CASE 4: Options: `listCols` is a simple array of col names\r\n\t\t\t\t\telse if ( Array.isArray(inObj.listCols) ) {\r\n\t\t\t\t\t\tvar objNew = {};\r\n\t\t\t\t\t\tObject.keys(inObj).forEach(function(key,idx){ objNew[key] = inObj[key]; });\r\n\t\t\t\t\t\tvar objListCols = {};\r\n\t\t\t\t\t\t// Filter returns unique values (otherwise, dupes will cause issues below. e.g.:['Id','Id'] will return nulls)\r\n\t\t\t\t\t\tinObj.listCols.filter(function(value,index,self){ return self.indexOf(value) === index }).forEach(function(colStr,i){\r\n\t\t\t\t\t\t\tvar strTmp = ( colStr.indexOf('/') > -1 ? colStr.substring(0,colStr.indexOf('/')) : colStr );\r\n\t\t\t\t\t\t\t// Handle cases where there are 2 expands from same column. Ex: 'Manager/Id' and 'Manager/Title'\r\n\t\t\t\t\t\t\tif ( colStr ) objListCols[strTmp] = ( objListCols[strTmp] ? { dataName:objListCols[strTmp].dataName+','+colStr } : { dataName:colStr } );\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tobjNew.listCols = objListCols;\r\n\t\t\t\t\t\tinObj = objNew;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// CASE 5: No listCols - create when needed\r\n\t\t\t\t\telse if ( !inObj.listCols ) inObj.listCols = {};\r\n\r\n\t\t\t\t\t// Add internal data objects\r\n\t\t\t\t\tinObj.spArrData = [];\r\n\t\t\t\t\tinObj.spObjData = {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// STEP 3: Check for `getVersions` option, as we need to force 'inObj.metadata' to true to get the List GUID of owssvr query next\r\n\t\t\t\tif ( typeof inObj.listCols === 'object' && Object.keys(inObj.listCols).length > 0 ) {\r\n\t\t\t\t\tObject.keys(inObj.listCols).forEach(function(key){\r\n\t\t\t\t\t\tvar obj = inObj.listCols[key];\r\n\t\t\t\t\t\tif ( obj.getVersions ) inObj.metadata = true;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// STEP 4: Start data fetch Promise chain\r\n\t\t\t\tPromise.resolve()\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\treturn new Promise(function(resolve, reject) {\r\n\t\t\t\t\t\tvar objAjaxQuery = {\r\n\t\t\t\t\t\t\turl     : _urlBase+\"/items\",\r\n\t\t\t\t\t\t\ttype    : \"GET\",\r\n\t\t\t\t\t\t\tcache   : inObj.cache || APP_OPTS.cache,\r\n\t\t\t\t\t\t\tmetadata: inObj.metadata || APP_OPTS.metadata,\r\n\t\t\t\t\t\t\theaders : { \"Accept\":\"application/json;odata=verbose\", \"X-RequestDigest\":_requestDigest }\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tvar arrExpands = [], strExpands = \"\";\r\n\r\n\t\t\t\t\t\t// STEP 1: Deal with next/paging\r\n\t\t\t\t\t\tif ( inObj.queryNext ) {\r\n\t\t\t\t\t\t\t// REQ-CHECK:\r\n\t\t\t\t\t\t\tif ( typeof inObj.queryNext !== 'object' || !inObj.queryNext.prevId || !inObj.queryNext.maxItems ) {\r\n\t\t\t\t\t\t\t\tinObj.queryNext = null;\r\n\t\t\t\t\t\t\t\tconsole.log('ERROR: queryNext should be an object with `prevId` and `maxItems`. EX: `{\"prevId\":200,\"maxItems\":100}`');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// STEP 2: Start building REST Endpoint URL\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// Next requires a special URL\r\n\t\t\t\t\t\t\tif ( inObj.queryNext && inObj.listCols && Object.keys(inObj.listCols).length > 0 ) objAjaxQuery.url += '?%24skiptoken=Paged%3dTRUE%26p_ID%3d'+ inObj.queryNext.prevId +'&%24select=';\r\n\t\t\t\t\t\t\t// If columns were provided, start a select query\r\n\t\t\t\t\t\t\telse if ( inObj.listCols && Object.keys(inObj.listCols).length > 0 ) objAjaxQuery.url += \"?$select=\";\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// STEP 3: Keep building REST Endpoint URL\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// A: Add columns\r\n\t\t\t\t\t\t\tObject.keys(inObj.listCols).forEach(function(key){\r\n\t\t\t\t\t\t\t\tvar col = inObj.listCols[key];\r\n\r\n\t\t\t\t\t\t\t\tif ( !col.dataName ) return; // Skip columns without a 'dataName' key\r\n\t\t\t\t\t\t\t\t// 1:\r\n\t\t\t\t\t\t\t\tif ( objAjaxQuery.url.substring(objAjaxQuery.url.length-1) == '=' ) objAjaxQuery.url += col.dataName;\r\n\t\t\t\t\t\t\t\telse objAjaxQuery.url += ( objAjaxQuery.url.lastIndexOf(',') == objAjaxQuery.url.length-1 ? col.dataName : ','+col.dataName );\r\n\t\t\t\t\t\t\t\t// 2:\r\n\t\t\t\t\t\t\t\tif ( col.dataName.indexOf('/') > -1 ) {\r\n\t\t\t\t\t\t\t\t\tvar strFieldName = col.dataName.substring(0, col.dataName.indexOf('/'));\r\n\t\t\t\t\t\t\t\t\tif ( arrExpands.indexOf(strFieldName) == -1 ) {\r\n\t\t\t\t\t\t\t\t\t\tarrExpands.push( strFieldName );\r\n\t\t\t\t\t\t\t\t\t\tstrExpands += (strExpands == '' ? '' : ',') + strFieldName;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// B: Add expand (if any)\r\n\t\t\t\t\t\t\tif ( strExpands ) objAjaxQuery.url += (objAjaxQuery.url.indexOf('?') > -1 ? '&':'?') + '$expand=' + strExpands;\r\n\r\n\t\t\t\t\t\t\t// C: Add filter (if any)\r\n\t\t\t\t\t\t\tif ( inObj.queryFilter ) {\r\n\t\t\t\t\t\t\t\tobjAjaxQuery.url += (objAjaxQuery.url.indexOf('?') > -1 ? '&':'?') + '$filter=' + ( inObj.queryFilter.indexOf('%') == -1 ? encodeURI(inObj.queryFilter) : inObj.queryFilter );\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// D: Add orderby (if any)\r\n\t\t\t\t\t\t\tif ( inObj.queryOrderby ) objAjaxQuery.url += (objAjaxQuery.url.indexOf('?') > -1 ? '&':'?') + '$orderby=' + inObj.queryOrderby;\r\n\r\n\t\t\t\t\t\t\t// E: Add maxrows / Next support (if any) or use default b/c SP2013 default is a paltry 100 rows!\r\n\t\t\t\t\t\t\tif ( inObj.queryNext ) {\r\n\t\t\t\t\t\t\t\tobjAjaxQuery.url += '&p_ID='+ inObj.queryNext.prevId +'&$top='+ inObj.queryNext.maxItems;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tobjAjaxQuery.url += (objAjaxQuery.url.indexOf('?$') > -1 ? '&':'?') + '$top=' + ( inObj.queryLimit ? inObj.queryLimit : APP_OPTS.maxRows );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// STEP 4: Send AJAX REST query\r\n\t\t\t\t\t\tsprLib.rest(objAjaxQuery)\r\n\t\t\t\t\t\t.then(function(arrResults){\r\n\t\t\t\t\t\t\t// A: Add all cols is none provided (aka:\"fetch all\")\r\n\t\t\t\t\t\t\tif ( (!inObj.listCols || Object.keys(inObj.listCols).length == 0) && arrResults.length > 0 ) {\r\n\t\t\t\t\t\t\t\tvar objListCols = {};\r\n\t\t\t\t\t\t\t\tObject.keys(arrResults[0]).forEach(function(colStr,idx){\r\n\t\t\t\t\t\t\t\t\t// DESIGN: Dont include those first few junky fields from SP that point to FieldsAsHTML etc\r\n\t\t\t\t\t\t\t\t\tif ( arrResults[0][colStr] && typeof arrResults[0][colStr] === 'object' && arrResults[0][colStr].__deferred ) {\r\n\t\t\t\t\t\t\t\t\t\tif (DEBUG) console.log('FYI: Skipping \"select all\" column: '+colStr);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tobjListCols[colStr] = { dataName:colStr };\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tinObj.listCols = objListCols;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// B: Iterate over results and capture them\r\n\t\t\t\t\t\t\tarrResults.forEach(function(result,idx){\r\n\t\t\t\t\t\t\t\t// B.1: Create row object\r\n\t\t\t\t\t\t\t\tvar objRow = {};\r\n\t\t\t\t\t\t\t\tvar intID = 0;\r\n\r\n\t\t\t\t\t\t\t\t// B.2: Capture `Id` and `__metadata` (if any)\r\n\t\t\t\t\t\t\t\tif ( result.__metadata ) {\r\n\t\t\t\t\t\t\t\t\t// Capture metadata\r\n\t\t\t\t\t\t\t\t\tobjRow['__metadata'] = result.__metadata;\r\n\r\n\t\t\t\t\t\t\t\t\t// Grab item `ID` and list `GUID` if possible\r\n\t\t\t\t\t\t\t\t\tif ( result.__metadata.uri ) {\r\n\t\t\t\t\t\t\t\t\t\tif ( result.__metadata.uri.indexOf('/Items(') > -1 ) {\r\n\t\t\t\t\t\t\t\t\t\t\tintID = Number(result.__metadata.uri.split('/Items(').pop().replace(')',''));\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tif ( !listGUID && result.__metadata.uri.indexOf(\"guid'\") > -1 ) {\r\n\t\t\t\t\t\t\t\t\t\t\tlistGUID = result.__metadata.uri.split(\"guid'\").pop().split(\"')/\")[0];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// B.3: Skip/Next/Paging support\r\n\t\t\t\t\t\t\t\tif ( result.__next ) {\r\n\t\t\t\t\t\t\t\t\tobjRow['__next'] = result.__next;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// B.4: Capture query results\r\n\t\t\t\t\t\t\t\tObject.keys(inObj.listCols).forEach(function(key){\r\n\t\t\t\t\t\t\t\t\tvar col = inObj.listCols[key];\r\n\t\t\t\t\t\t\t\t\tvar arrCol = [];\r\n\t\t\t\t\t\t\t\t\tvar colVal = \"\";\r\n\r\n\t\t\t\t\t\t\t\t\t// B.3.1: Get value(s) for this key\r\n\t\t\t\t\t\t\t\t\t// Handle LookupMulti columns\r\n\t\t\t\t\t\t\t\t\tif ( col.dataName && col.dataName.indexOf('/') > -1 && result[col.dataName.split('/')[0]].results ) {\r\n\t\t\t\t\t\t\t\t\t\t// A:\r\n\t\t\t\t\t\t\t\t\t\t// NOTE: `listCols` can have \"Dept/Id\" and \"Dept/Title\", but SP only returns *ONE* result\r\n\t\t\t\t\t\t\t\t\t\t// ....: So, skip any subsequnt listCol once results have been captured\r\n\t\t\t\t\t\t\t\t\t\tif ( objRow[key] ) return;\r\n\r\n\t\t\t\t\t\t\t\t\t\t// B: Default for this column type is empty array\r\n\t\t\t\t\t\t\t\t\t\tcolVal = [];\r\n\r\n\t\t\t\t\t\t\t\t\t\t// C: Add any results\r\n\t\t\t\t\t\t\t\t\t\tresult[col.dataName.split('/')[0]].results.forEach(function(objResult,idx){\r\n\t\t\t\t\t\t\t\t\t\t\t// EX: {__metadata:Object, Id:2, Title:\"Human Resources\"}\r\n\t\t\t\t\t\t\t\t\t\t\tif ( objResult.__metadata ) delete objResult.__metadata;\r\n\t\t\t\t\t\t\t\t\t\t\t// Capture any-and-all columns returned (aside from removal of above)\r\n\t\t\t\t\t\t\t\t\t\t\tcolVal.push( objResult );\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t// Handle Lookup/Person/Url/etc. Ex: 'Manager/Title'\r\n\t\t\t\t\t\t\t\t\telse if ( col.dataName && col.dataName.indexOf('/') > -1 ) {\r\n\t\t\t\t\t\t\t\t\t\t// A: Split lookup info object/field\r\n\t\t\t\t\t\t\t\t\t\tarrCol = col.dataName.split('/');\r\n\t\t\t\t\t\t\t\t\t\t// B: Remove extraneous `__metadata`\r\n\t\t\t\t\t\t\t\t\t\tif ( result[arrCol[0]].__metadata ) delete result[arrCol[0]].__metadata;\r\n\t\t\t\t\t\t\t\t\t\t// B: Same for `__deferred`.\r\n\t\t\t\t\t\t\t\t\t\t// NOTE: Empty Multi-Person returns `{__deferred:{uri:'http...'}}` (ugh!)\r\n\t\t\t\t\t\t\t\t\t\tif ( result[arrCol[0]].__deferred ) delete result[arrCol[0]].__deferred;\r\n\t\t\t\t\t\t\t\t\t\t// C: Capture value\r\n\t\t\t\t\t\t\t\t\t\t// CASE 1: `dataName` was used - in this case return the actual field user asked for\r\n\t\t\t\t\t\t\t\t\t\t// Detect use of names listCols by comparing key to dataName\r\n\t\t\t\t\t\t\t\t\t\tif ( key != arrCol[0] && key != col.dataName ) colVal = result[arrCol[0]][arrCol[1]];\r\n\t\t\t\t\t\t\t\t\t\t// CASE 2: Other - in this case return the complete object (Ex: { Title:'Manager' })\r\n\t\t\t\t\t\t\t\t\t\t// IMPORTANT: This de facto returns all the *other* fields queried. Eg: 'Manager/Id' and 'Manager/Title' were in cols\r\n\t\t\t\t\t\t\t\t\t\t// We want to return a *single* object with these 2 elements, so they can be derefereced using 'Manger.Title' etc.\r\n\t\t\t\t\t\t\t\t\t\t// Capture any-and-all columns returned (aside from removal of above)\r\n\t\t\t\t\t\t\t\t\t\telse colVal = result[arrCol[0]];\r\n\r\n\t\t\t\t\t\t\t\t\t\t// D: Fix result if needed: Empty person fields will be `{__proto__:{}}` at this point\r\n\t\t\t\t\t\t\t\t\t\tif ( colVal && typeof colVal === 'object' && !Array.isArray(colVal) && Object.keys(colVal).length == 0 ) colVal = null;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if ( col.dataName ) {\r\n\t\t\t\t\t\t\t\t\t\tcolVal = result[col.dataName];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if ( col.dataFunc ) {\r\n\t\t\t\t\t\t\t\t\t\tcolVal = col.dataFunc(result);\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t// B.3.2: Set value for this key\r\n\t\t\t\t\t\t\t\t\t// If dataType is known, then convert\r\n\t\t\t\t\t\t\t\t\tif ( col.dataType == 'DateTime' ) {\r\n\t\t\t\t\t\t\t\t\t\tobjRow[key] = new Date(colVal);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tobjRow[key] = ( APP_OPTS.cleanColHtml && col.listDataType == 'string' ? colVal.replace(/<div(.|\\n)*?>/gi,'').replace(/<\\/div>/gi,'') : colVal );\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t// B.3.3: Handle `getVersions`\r\n\t\t\t\t\t\t\t\t\t// Results of an append-text query is an array of Note versions in desc order\r\n\t\t\t\t\t\t\t\t\tif ( col.getVersions ) objRow[key] = [];\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t// B.5: Set data\r\n\t\t\t\t\t\t\t\t// 4.A: Result row\r\n\t\t\t\t\t\t\t\tinObj.spArrData.push( objRow );\r\n\t\t\t\t\t\t\t\t// B.5: Create data object if we have ID (for lookups w/o spArrData.filter)\r\n\t\t\t\t\t\t\t\tif ( intID ) {\r\n\t\t\t\t\t\t\t\t\tinObj.spObjData[intID] = objRow;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// LAST:\r\n\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch(function(strErr){\r\n\t\t\t\t\t\t\treject( strErr );\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\tvar arrAppendCols = [], arrAppendColNames = [];\r\n\r\n\t\t\t\t\t// STEP 1: Gather any append cols that need to be queried\r\n\t\t\t\t\tObject.keys(inObj.listCols).forEach(function(key){\r\n\t\t\t\t\t\tvar col = inObj.listCols[key];\r\n\r\n\t\t\t\t\t\tif ( col.getVersions ) {\r\n\t\t\t\t\t\t\tcol.keyName = key; // Store this column's key to avoid complex (slow) filtering below when we need to save by this key name\r\n\t\t\t\t\t\t\tarrAppendCols.push( col );\r\n\t\t\t\t\t\t\tarrAppendColNames.push( col.dataName );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// STEP 2: Get data for any found cols\r\n\t\t\t\t\tif ( listGUID && arrAppendCols.length ) {\r\n\t\t\t\t\t\t// STEP 1: Query SharePoint\r\n\t\t\t\t\t\t// Convert our dataName array into a comma-delim string, then replace ',' with '%20' and our query string is constrcuted!\r\n\t\t\t\t\t\tsprLib.rest({\r\n\t\t\t\t\t\t\turl: \"_vti_bin/owssvr.dll?Cmd=Display&List=\"\r\n\t\t\t\t\t\t\t\t+ \"%7B\"+ listGUID +\"%7D\"+\"&XMLDATA=TRUE&IncludeVersions=TRUE\"\r\n\t\t\t\t\t\t\t\t+ \"&Query=ID%20\"+ arrAppendColNames.toString().replace(/\\,/g,'%20') +\"%20\"\r\n\t\t\t\t\t\t\t\t+ \"Modified%20Editor%20\"\r\n\t\t\t\t\t\t\t\t+ \"&SortField=Modified&SortDir=ASC\"\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.then(function(result){\r\n\t\t\t\t\t\t\tif ( result && result[0] && result[0].documentElement ) {\r\n\t\t\t\t\t\t\t\t// Query is order by oldest->newest, so always capture the result and the last one captured will always be the most recent\r\n\t\t\t\t\t\t\t\tresult[0].documentElement.querySelectorAll('row').forEach(function(row){\r\n\t\t\t\t\t\t\t\t\tarrAppendCols.forEach(function(objCol,idx){\r\n\t\t\t\t\t\t\t\t\t\tvar intID = row.getAttribute(\"ows_ID\");\r\n\t\t\t\t\t\t\t\t\t\tvar prvComm = \"\";\r\n\r\n\t\t\t\t\t\t\t\t\t\t// NOTE: LOGIC: Versions doesnt filter like getItems, so we may get many more items than our dataset has\r\n\t\t\t\t\t\t\t\t\t\tif ( inObj.spObjData[intID] && row.getAttribute('ows_'+objCol.dataName) ) {\r\n\t\t\t\t\t\t\t\t\t\t\tvar rowNote = row.getAttribute('ows_'+objCol.dataName) || '';\r\n\t\t\t\t\t\t\t\t\t\t\tif ( rowNote ) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif ( rowNote != prvComm ) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// IE11: Convert date to ISO-8601 format or IE will fail using date like '2017-01-02 12:34:55'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tinObj.spObjData[intID][objCol.keyName].push({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tverDate: new Date(row.getAttribute('ows_Modified').replace(' ','T')).toISOString(),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tverName: row.getAttribute('ows_Editor').substring(row.getAttribute('ows_Editor').indexOf(\"#\")+1),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tverText: rowNote\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tprvComm = rowNote;\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// When note content is the same, replace the previous version\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// (so author and date are correct - older ones are ModifiedBy folks who Modified *OTHER* fields! - oldest is true author!)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tinObj.spObjData[intID][objCol.keyName].pop();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tinObj.spObjData[intID][objCol.keyName].push({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tverDate: new Date(row.getAttribute('ows_Modified').replace(' ','T')).toISOString(),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tverName: row.getAttribute('ows_Editor').substring(row.getAttribute('ows_Editor').indexOf(\"#\")+1),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tverText: rowNote\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// LAST: Return List data\r\n\t\t\t\t\t\t\tresolve(inObj.spArrData);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch(function(strErr){\r\n\t\t\t\t\t\t\treject( strErr );\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tresolve(inObj.spArrData);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function(strErr){\r\n\t\t\t\t\treject( strErr );\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// DEPRECATED: TODO: Remove in 2.0.0\r\n\t\t_newList.getItems = _newList.items;\r\n\r\n\t\t// CRUD ---------------------------------------------------------------------\r\n\r\n\t\t/**\r\n\t    * Create/Insert a new item into SP List/Library\r\n\t\t*\r\n\t\t* @example\r\n\t\t* sprLib.list('Employees').create({\r\n\t\t*   __metadata: { type:\"SP.Data.EmployeesListItem\" },\r\n\t\t*   Name: 'Marty McFly',\r\n\t\t*   Hire_x0020_Date: new Date()\r\n\t\t* });\r\n\t\t*\r\n\t\t* @param {object} `jsonData` - The item to insert, in regular SharePoint JSON format (ex: `{Full_x0020_Name:'Brent Ely'}`)\r\n\t\t*\r\n\t\t* @return {Promise} - Return `Promise` containing newly created item in JSON format (return the data result from SharePoint).\r\n\t\t*/\r\n\t\t_newList.create = function(jsonData) {\r\n\t\t\treturn new Promise(function(resolve, reject) {\r\n\t\t\t\t// FIRST: Param checks\r\n\t\t\t\tif ( !jsonData || Array.isArray(jsonData) || typeof jsonData !== 'object' || Object.keys(jsonData).length == 0 ) reject(\"Object type expected! Ex: `{Title:'New Emp'}`\");\r\n\t\t\t\ttry { var test = JSON.stringify(jsonData) } catch(ex) { reject(\"`JSON.stringify(jsonData)` failed! Send valid JSON Please. Ex: `{'Name':'Brent'}`\") }\r\n\r\n\t\t\t\t// STEP 1: Param Setup\r\n\t\t\t\t// B: DESIGN/OPTION: If no etag is provided, consider it a force (a faux {OPTION})\r\n\t\t\t\tjsonData.__metadata = jsonData.__metadata || {};\r\n\t\t\t\tdelete jsonData.__metadata.etag; // Ensure we dont pass an etag\r\n\t\t\t\tdelete jsonData.__next; // sprLib may return `next` which in turn may be passed here subsequently - its invalid, so remove it\r\n\r\n\t\t\t\t// STEP 2: Create item\r\n\t\t\t\tPromise.resolve()\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\treturn ( jsonData.__metadata.type ? null : getListItemType() );\r\n\t\t\t\t})\r\n\t\t\t\t.then(function(objMetadata){\r\n\t\t\t\t\t// 1: Add __metadata if provided\r\n\t\t\t\t\tif ( objMetadata && objMetadata.type ) jsonData.__metadata = objMetadata;\r\n\r\n\t\t\t\t\t// 2: Create item\r\n\t\t\t\t\tsprLib.rest({\r\n\t\t\t\t\t\ttype    : \"POST\",\r\n\t\t\t\t\t\turl     : _urlBase +\"/items\",\r\n\t\t\t\t\t\tdata    : JSON.stringify(jsonData),\r\n\t\t\t\t\t\tmetadata: true,\r\n\t\t\t\t\t\theaders : { \"Accept\":\"application/json;odata=verbose\", \"X-RequestDigest\":_requestDigest }\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then(function(arrData){\r\n\t\t\t\t\t\tif ( arrData && arrData[0] ) {\r\n\t\t\t\t\t\t\t// A: Populate new ID (both 'Id' and 'ID' to mimic SP)\r\n\t\t\t\t\t\t\tjsonData.Id = arrData[0].Id;\r\n\t\t\t\t\t\t\tjsonData.ID = arrData[0].ID;\r\n\r\n\t\t\t\t\t\t\t// B: Populate metadata\r\n\t\t\t\t\t\t\tjsonData.__metadata = jsonData.__metadata || arrData[0].__metadata || {};\r\n\t\t\t\t\t\t\tjsonData.__metadata.etag = jsonData.__metadata.etag || (arrData[0].__metadata ? arrData[0].__metadata.etag : null);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tjsonData = null;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// LAST: Return new item\r\n\t\t\t\t\t\tresolve( jsonData );\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(function(strErr){\r\n\t\t\t\t\t\treject( strErr );\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function(err){ reject(err) });\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t* Update an existing item in a SP List/Library\r\n\t\t*\r\n\t\t* @example\r\n\t\t* sprLib.list('Employees').update({\r\n\t\t*   __metadata: { type:\"SP.Data.EmployeesListItem\", etag:10 },\r\n\t\t*   Id: 1,\r\n\t\t*   Name: 'updated by sprLib.list().update()',\r\n\t\t*   Hire_x0020_Date: new Date()\r\n\t\t* })\r\n\t\t* .then(function(objItem){ console.table(objItem) })\r\n\t\t* .catch(function(strErr){ console.error(strErr)  });\r\n\t\t*\r\n\t\t* @param {object} `jsonData` - The item to update, in regular SharePoint JSON format\r\n\t\t*\r\n\t\t* @return {object} Return newly created item in JSON format (return the data result from SharePoint).\r\n\t\t*/\r\n\t\t_newList.update = function(jsonData) {\r\n\t\t\treturn new Promise(function(resolve, reject) {\r\n\t\t\t\t// FIRST: Param checks\r\n\t\t\t\tif ( !jsonData || Array.isArray(jsonData) || typeof jsonData !== 'object' || Object.keys(jsonData).length == 0 ) reject(\"Object type expected! Ex: `{Title:'Brent'}`\");\r\n\t\t\t\tif ( !jsonData['ID'] && !jsonData['Id'] && !jsonData['iD'] && !jsonData['id'] ) reject(\"Object must have an `Id` property! Ex: `{Id:99}`\");\r\n\t\t\t\ttry { var test = JSON.stringify(jsonData) } catch(ex) { reject(\"`JSON.stringify(jsonData)` failed! Send valid object. Ex: `{'Title':'Brent'}`\") }\r\n\r\n\t\t\t\t// STEP 1: Param Setup\r\n\t\t\t\t// A: Set our `Id` value (users may send an of 4 different cases), then remove as ID is not updateable in SP\r\n\t\t\t\tvar intID = jsonData['ID'] || jsonData['Id'] || jsonData['iD'] || jsonData['id'];\r\n\t\t\t\tdelete jsonData.ID; delete jsonData.Id; delete jsonData.iD; delete jsonData.id;\r\n\t\t\t\t// B: DESIGN/OPTION: If no etag is provided, consider it a force (a faux {OPTION})\r\n\t\t\t\tjsonData.__metadata = jsonData.__metadata || {};\r\n\t\t\t\tif ( jsonData.__metadata.etag == \"\" || jsonData.__metadata.etag == null ) delete jsonData.__metadata.etag; // Ensure junk isnt passed, as etag on SP will error\r\n\t\t\t\tdelete jsonData.__next; // sprLib may return `next` which in turn may be passed here subsequently - its invalid, so remove it\r\n\r\n\t\t\t\t// STEP 2: Update item\r\n\t\t\t\tPromise.resolve()\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\treturn ( jsonData.__metadata.type ? null : getListItemType() );\r\n\t\t\t\t})\r\n\t\t\t\t.then(function(objMetadata){\r\n\t\t\t\t\t// 1: Add `__metadata.type` if needed\r\n\t\t\t\t\tif ( objMetadata && objMetadata.type ) jsonData.__metadata.type = objMetadata.type;\r\n\r\n\t\t\t\t\t// 2: Update item\r\n\t\t\t\t\tsprLib.rest({\r\n\t\t\t\t\t\ttype    : \"POST\",\r\n\t\t\t\t\t\turl     : _urlBase +\"/items(\"+ intID +\")\",\r\n\t\t\t\t\t\tdata    : JSON.stringify(jsonData),\r\n\t\t\t\t\t\tmetadata: true,\r\n\t\t\t\t\t\theaders : {\r\n\t\t\t\t\t\t\t\"X-HTTP-Method\"  : \"MERGE\",\r\n\t\t\t\t\t\t\t\"Accept\"         : \"application/json;odata=verbose\",\r\n\t\t\t\t\t\t\t\"X-RequestDigest\": _requestDigest,\r\n\t\t\t\t\t\t\t\"IF-MATCH\"       : ( jsonData.__metadata.etag ? jsonData.__metadata.etag : \"*\" )\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then(function(arrData){\r\n\t\t\t\t\t\t// A: SP doesnt return anything for Merge/Update, so return original jsonData object so users can chain, etc.\r\n\t\t\t\t\t\t// Populate both 'Id' and 'ID' to mimic SP2013\r\n\t\t\t\t\t\tjsonData.Id = intID; jsonData.ID = intID;\r\n\r\n\t\t\t\t\t\t// B: Increment etag (if one was provided, otherwise, we cant know what it is without querying for it!)\r\n\t\t\t\t\t\tif ( jsonData.__metadata.etag ) jsonData.__metadata.etag = '\"'+ (Number(jsonData.__metadata.etag.replace(/[\\'\\\"]+/gi, ''))+1) +'\"';\r\n\r\n\t\t\t\t\t\t// LAST: Return item\r\n\t\t\t\t\t\tresolve( jsonData );\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(function(strErr){\r\n\t\t\t\t\t\treject( strErr );\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t* Delete an item from a SP List/Library\r\n\t\t* This operation is permanent (item bypasses the Recycle Bin)!\r\n\t\t*\r\n\t\t* @example - with `etag`\r\n\t\t* sprLib.list('Employees').delete({ \"__metadata\":{\"etag\":10}, \"Id\":1 }).then(intID => console.log('Deleted #'+intID));\r\n\t\t*\r\n\t\t* @example - without `etag` (force delete)\r\n\t\t* sprLib.list('Employees').delete({ \"ID\":123 }).then(intID => console.log('Deleted #'+intID));\r\n\t\t*\r\n\t\t* @return {number} Return the `id` just deleted\r\n\t\t*/\r\n\t\t_newList.delete = function(jsonData) {\r\n\t\t\treturn new Promise(function(resolve,reject) {\r\n\t\t\t\t// FIRST: Param checks\r\n\t\t\t\tif ( !jsonData || Array.isArray(jsonData) || typeof jsonData !== 'object' || Object.keys(jsonData).length == 0 ) reject(\"Object type expected! Ex: `{'ID':123}`\");\r\n\t\t\t\tif ( !jsonData['ID'] && !jsonData['Id'] && !jsonData['iD'] && !jsonData['id'] ) reject(\"Object data must have an `Id` property! Ex: `{'ID':123}`\");\r\n\t\t\t\ttry { var test = JSON.stringify(jsonData) } catch(ex) { reject(\"`JSON.stringify(jsonData)` failed! Please pass a valid object. Ex: `{'ID':123}`\") }\r\n\r\n\t\t\t\t// STEP 1: Param Setup\r\n\t\t\t\t// A: Set our `Id` value (users may send an of 4 different cases), then remove as ID is not updateable in SP\r\n\t\t\t\tvar intID = jsonData['ID'] || jsonData['Id'] || jsonData['iD'] || jsonData['id'];\r\n\t\t\t\tdelete jsonData.ID; delete jsonData.Id; delete jsonData.iD; delete jsonData.id;\r\n\t\t\t\t// B: DESIGN/OPTION: If no etag is provided, consider it a force (a faux {OPTION})\r\n\t\t\t\tjsonData.__metadata = jsonData.__metadata || {};\r\n\t\t\t\tif ( jsonData.__metadata.etag == \"\" || jsonData.__metadata.etag == null ) delete jsonData.__metadata.etag; // Ensure junk isnt passed, as etag on SP will error\r\n\t\t\t\tdelete jsonData.__next; // sprLib may return `next` which in turn may be passed here subsequently - its invalid, so remove it\r\n\r\n\t\t\t\t// STEP 2: Delete item\r\n\t\t\t\tPromise.resolve()\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\treturn ( jsonData.__metadata.type ? null : getListItemType() );\r\n\t\t\t\t})\r\n\t\t\t\t.then(function(objMetadata){\r\n\t\t\t\t\t// 1: Add `__metadata.type` if needed\r\n\t\t\t\t\tif ( objMetadata && objMetadata.type ) jsonData.__metadata.type = objMetadata.type;\r\n\r\n\t\t\t\t\t// 2: Update item\r\n\t\t\t\t\tsprLib.rest({\r\n\t\t\t\t\t\ttype    : \"DELETE\",\r\n\t\t\t\t\t\turl     : _urlBase +\"/items(\"+ intID +\")\",\r\n\t\t\t\t\t\tmetadata: true,\r\n\t\t\t\t\t\theaders : {\r\n\t\t\t\t\t\t\t\"Accept\"         : \"application/json;odata=verbose\",\r\n\t\t\t\t\t\t\t\"X-RequestDigest\": _requestDigest,\r\n\t\t\t\t\t\t\t\"X-HTTP-Method\"  : \"MERGE\",\r\n\t\t\t\t\t\t\t\"IF-MATCH\"       : ( jsonData.__metadata.etag ? jsonData.__metadata.etag : \"*\" )\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then(function(){\r\n\t\t\t\t\t\t// SP doesnt return anything for Deletes, but SpRestLib returns ID\r\n\t\t\t\t\t\tresolve( intID );\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(function(strErr){\r\n\t\t\t\t\t\treject( strErr );\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t* Recycle an item from a SP List/Library\r\n\t\t* This operation sends the item to Recycle Bin (item is recoverable)\r\n\t\t*\r\n\t\t* @example\r\n\t\t* sprLib.list('Employees').recycle({ \"ID\":123 })\r\n\t\t*\r\n\t\t* @return {number} Return the `id` just recycled\r\n\t\t*/\r\n\t\t_newList.recycle = function(jsonData) {\r\n\t\t\treturn new Promise(function(resolve,reject) {\r\n\t\t\t\t// FIRST: Param checks\r\n\t\t\t\tif ( !jsonData || Array.isArray(jsonData) || typeof jsonData !== 'object' || Object.keys(jsonData).length == 0 ) reject(\"Object type expected! Ex: `{'ID':123}`\");\r\n\t\t\t\tif ( !jsonData['ID'] && !jsonData['Id'] && !jsonData['iD'] && !jsonData['id'] ) reject(\"Object data must have an `Id` property! Ex: `{'ID':123}`\");\r\n\t\t\t\ttry { var test = JSON.stringify(jsonData) } catch(ex) { reject(\"`JSON.stringify(jsonData)` failed! Please pass a valid object. Ex: `{'ID':123}`\") }\r\n\r\n\t\t\t\t// STEP 1: Param Setup\r\n\t\t\t\t// A: Set our `Id` value (users may send an of 4 different cases), then remove as ID is not updateable in SP\r\n\t\t\t\tvar intID = jsonData['ID'] || jsonData['Id'] || jsonData['iD'] || jsonData['id'];\r\n\t\t\t\tdelete jsonData.ID; delete jsonData.Id; delete jsonData.iD; delete jsonData.id;\r\n\t\t\t\t// B: DESIGN/OPTION: If no etag is provided, consider it a force (a faux {OPTION})\r\n\t\t\t\tjsonData.__metadata = jsonData.__metadata || {};\r\n\t\t\t\tif ( jsonData.__metadata.etag == \"\" || jsonData.__metadata.etag == null ) delete jsonData.__metadata.etag; // Ensure junk isnt passed, as etag on SP will error\r\n\t\t\t\tdelete jsonData.__next; // sprLib may return `next` which in turn may be passed here subsequently - its invalid, so remove it\r\n\r\n\t\t\t\t// STEP 2: Recycle item\r\n\t\t\t\tsprLib.rest({\r\n\t\t\t\t\ttype    : \"POST\",\r\n\t\t\t\t\turl     : _urlBase +\"/items(\"+ intID +\")/recycle()\",\r\n\t\t\t\t\tmetadata: true,\r\n\t\t\t\t\theaders : {\r\n\t\t\t\t\t\t\"Accept\"         : \"application/json;odata=verbose\",\r\n\t\t\t\t\t\t\"X-RequestDigest\": _requestDigest\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\t// SP returns the item guid for Recycle operations\r\n\t\t\t\t\t// EX: {\"d\":{\"Recycle\":\"ed504e3d-f8ab-4dd4-bb22-6ddaa78bd117\"}}\r\n\t\t\t\t\tresolve( Number(intID) );\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function(strErr){\r\n\t\t\t\t\treject( strErr );\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t// LAST: Return this new List\r\n\t\treturn _newList;\r\n\t};\r\n\r\n\t// API: REST (Runs internal AJAX ops *and* provides direct/ad-hoc interface to users)\r\n\t/**\r\n\t* Execute an ad-hoc REST query to one of many endpoints\r\n\t*\r\n\t* @example - sprLib.rest({ url:'/sites/dev/_api/web/webs', metadata:true });\r\n\t* @example - sprLib.rest({ url:'/sites/dev/_api/web/webs', queryCols:['ID','Title'] });\r\n\t* @example\r\n\tsprLib.rest({\r\n\t\turl: '/sites/dev/_api/web/sitegroups',\r\n\t\ttype: ['GET' | 'POST'],\r\n\t\tqueryCols: {\r\n\t\t\ttitle:       { dataName:'Title' },\r\n\t\t\tloginName:   { dataName:'LoginName' },\r\n\t\t\teditAllowed: { dataName:'AllowMembersEditMembership' }\r\n\t\t},\r\n\t\tqueryFilter:  \"AllowMembersEditMembership eq 1\",\r\n\t\tqueryOrderby: \"Title\",\r\n\t\tqueryLimit:   10\r\n\t})\r\n\t.then(function(arrayResults){ console.table(arrayResults) });\r\n\t*/\r\n\t// sprLib.rest({ url:\"/sites/dev/_api/web/sitegroups\" }).then(function(data){ console.table(data); }); (data.d.results)\r\n\t// sprLib.rest({ url:\"/_api/web/lists/getbytitle('Employees')\" }).then(function(data){ console.table(data); }); (data.d)\r\n\t//\r\n\t// EX: https://siteurl.sharepoint.com/sites/dev/_api/web/lists/getbytitle('Employees')/\r\n\t// EX: https://siteurl.sharepoint.com/sites/dev/_api/web/sitegroups\r\n\tsprLib.rest = function rest(inOpt) {\r\n\t\treturn new Promise(function(resolve, reject) {\r\n\t\t\t// STEP 1: Options setup\r\n\t\t\tinOpt = inOpt || {};\r\n\t\t\tinOpt.spArrData = [];\r\n\t\t\tinOpt.cache    = inOpt.cache    || APP_OPTS.cache;\r\n\t\t\tinOpt.digest   = (inOpt.requestDigest || (typeof document !== 'undefined' && document.getElementById('__REQUESTDIGEST') ? document.getElementById('__REQUESTDIGEST').value : null));\r\n\t\t\tinOpt.metadata = (typeof inOpt.metadata !== 'undefined' && inOpt.metadata != null ? inOpt.metadata : APP_OPTS.metadata);\r\n\t\t\tinOpt.type     = inOpt.restType || inOpt.type || \"GET\";\r\n\t\t\tinOpt.url      = (inOpt.restUrl || inOpt.url || APP_OPTS.baseUrl).replace(/\\\"/g, \"'\");\r\n\r\n\t\t\t// STEP 2: Setup vars\r\n\t\t\tvar arrExpands = [], strExpands = \"\";\r\n\t\t\tvar objAjaxQuery = {\r\n\t\t\t\turl    : inOpt.url,\r\n\t\t\t\ttype   : inOpt.type,\r\n\t\t\t\tcache  : inOpt.cache,\r\n\t\t\t\theaders: inOpt.headers || { \"Accept\":\"application/json;odata=verbose\", \"X-RequestDigest\":inOpt.digest }\r\n\t\t\t};\r\n\t\t\t// Add `data` if included\r\n\t\t\tif ( inOpt.data ) objAjaxQuery.data = inOpt.data;\r\n\t\t\t// Add default `context-type` for POST if none was specified\r\n\t\t\tif ( objAjaxQuery.type == 'POST' && !objAjaxQuery.headers.contentType ) objAjaxQuery.headers['content-type'] = 'application/json;odata=verbose';\r\n\r\n\t\t\t// STEP 3: Construct Base URL: `url` can be presented in many different forms...\r\n\t\t\tobjAjaxQuery.url = (inOpt.url.toLowerCase().indexOf('http') == 0 || inOpt.url.indexOf('/') == 0 ? '' : APP_OPTS.baseUrl);\r\n\t\t\tobjAjaxQuery.url += (inOpt.url.toLowerCase().indexOf('http') != 0 && inOpt.url.indexOf('/') != 0 ? '/' : '') + inOpt.url;\r\n\r\n\t\t\t// STEP 4: Continue building up `url` with any options provided\r\n\t\t\t{\r\n\t\t\t\t// queryCols: Start 'select query'\r\n\t\t\t\tif ( inOpt.queryCols ) {\r\n\t\t\t\t\t// A: Start 'select query'\r\n\t\t\t\t\tif ( objAjaxQuery.url.toLowerCase().indexOf('$select') == -1 ) objAjaxQuery.url += '?$select=';\r\n\r\n\t\t\t\t\t// B: parse `queryCols` (can be: string, array of strings, or objects)\r\n\t\t\t\t\t// Convert single string column into an array for use below\r\n\t\t\t\t\tif ( typeof inOpt.queryCols === 'string' ) inOpt.queryCols = [ inOpt.queryCols ];\r\n\r\n\t\t\t\t\t// C: Build query object if `queryCols` array exists - create 'expands'\r\n\t\t\t\t\tif ( Array.isArray(inOpt.queryCols) ) {\r\n\t\t\t\t\t\tvar objListCols = {};\r\n\t\t\t\t\t\tinOpt.queryCols.forEach(function(colStr,i){\r\n\t\t\t\t\t\t\tvar strFieldName = ( colStr.indexOf('/') > -1 ? colStr.substring(0,colStr.indexOf('/')) : colStr );\r\n\t\t\t\t\t\t\t// Handle cases where there are 2 expands from same column. Ex: 'Manager/Id' and 'Manager/Title'\r\n\t\t\t\t\t\t\t// When fieldName already exists, just add subsequent fields to dataName so $select gets them - Ex: \"Manager/Id,Manager/Title\"\r\n\t\t\t\t\t\t\tobjListCols[strFieldName] = ( objListCols[strFieldName] ? { dataName:objListCols[strFieldName].dataName+','+colStr } : { dataName:colStr } );\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tinOpt.queryCols = objListCols;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// D: Add columns\r\n\t\t\t\t\tif ( typeof inOpt.queryCols === 'object' ) {\r\n\t\t\t\t\t\t// A: Add columns\r\n\t\t\t\t\t\tObject.keys(inOpt.queryCols).forEach(function(key){\r\n\t\t\t\t\t\t\tvar col = inOpt.queryCols[key];\r\n\r\n\t\t\t\t\t\t\tif ( !col.dataName ) return; // Skip columns without a 'dataName' key\r\n\t\t\t\t\t\t\t// 1:\r\n\t\t\t\t\t\t\tif ( objAjaxQuery.url.substring(objAjaxQuery.url.length-1) == '=' ) objAjaxQuery.url += col.dataName;\r\n\t\t\t\t\t\t\telse objAjaxQuery.url += ( objAjaxQuery.url.lastIndexOf(',') == objAjaxQuery.url.length-1 ? col.dataName : ','+col.dataName );\r\n\t\t\t\t\t\t\t// 2:\r\n\t\t\t\t\t\t\tif ( col.dataName.indexOf('/') > -1 ) {\r\n\t\t\t\t\t\t\t\t// `dataName` will be complete value passed in (Ex: 'Members/User/Id')\r\n\t\t\t\t\t\t\t\tvar strFieldName = col.dataName.substring(0, col.dataName.indexOf('/'));      // EX: 'Members/User/Id' -> 'Members'\r\n\t\t\t\t\t\t\t\tvar strExpandName = col.dataName.substring(0, col.dataName.lastIndexOf('/')); // EX: 'Members/User/Id' -> 'Members/User'\r\n\t\t\t\t\t\t\t\tif ( arrExpands.indexOf(strExpandName) == -1 ) {\r\n\t\t\t\t\t\t\t\t\tarrExpands.push( strExpandName );\r\n\t\t\t\t\t\t\t\t\tstrExpands += (strExpands == '' ? '' : ',') + strExpandName;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// queryLimit: Add maxrows (b/c default in SP2013 is a paltry 100 rows)\r\n\t\t\t\t// NOTE: Only applies to GET types (POST with this param are obv. invalid!)\r\n\t\t\t\tif ( (inOpt.queryFilter || objAjaxQuery.url.toLowerCase().indexOf('$select') > -1)\r\n\t\t\t\t\t&& inOpt.url.toLowerCase().indexOf('$top') == -1 && inOpt.type == \"GET\" ) {\r\n\t\t\t\t\tobjAjaxQuery.url += ( (objAjaxQuery.url.indexOf('?')>0?'&':'?')+'$top=' + ( inOpt.queryLimit ? inOpt.queryLimit : APP_OPTS.maxRows ) );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// queryFilter: Add filter (if any)\r\n\t\t\t\tif ( inOpt.url.toLowerCase().indexOf('$filter') == -1 && inOpt.queryFilter ) {\r\n\t\t\t\t\tobjAjaxQuery.url += ( (objAjaxQuery.url.indexOf('?')>0?'&':'?')+'$filter=' + ( inOpt.queryFilter.indexOf('%') == -1 ? encodeURI(inOpt.queryFilter) : inOpt.queryFilter ) );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// queryOrderby: Add orderby (if any)\r\n\t\t\t\tif ( inOpt.url.toLowerCase().indexOf('$orderby') == -1 && inOpt.queryOrderby ) {\r\n\t\t\t\t\tobjAjaxQuery.url += ( (objAjaxQuery.url.indexOf('?')>0?'&':'?')+'$orderby=' + inOpt.queryOrderby );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Expands: Add expand (if any)\r\n\t\t\t\tif ( inOpt.url.toLowerCase().indexOf('$expand') == -1 && strExpands ) {\r\n\t\t\t\t\tobjAjaxQuery.url += ( (objAjaxQuery.url.indexOf('?')>0?'&':'?')+'$expand=' + strExpands );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// STEP 5: Execute REST call\r\n\t\t\tPromise.resolve()\r\n\t\t\t.then(function(){\r\n\t\t\t\treturn new Promise(function(resolve, reject) {\r\n\t\t\t\t\tif ( NODEJS && APP_OPTS.nodeEnabled ) {\r\n\t\t\t\t\t\t// AUTH: Cookie is required for GET and POST\r\n\t\t\t\t\t\tobjAjaxQuery.headers[\"Cookie\"] = APP_OPTS.nodeCookie;\r\n\t\t\t\t\t\tvar options = {\r\n\t\t\t\t\t\t\thostname: APP_OPTS.nodeServer,\r\n\t\t\t\t\t\t\tpath:     objAjaxQuery.url,\r\n\t\t\t\t\t\t\tmethod:   objAjaxQuery.type,\r\n\t\t\t\t\t\t\theaders:  objAjaxQuery.headers\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tvar request = https.request(options, function(res){\r\n\t\t\t\t\t\t\tvar rawData = '';\r\n\t\t\t\t\t\t\tres.setEncoding('utf8');\r\n\t\t\t\t\t\t\tres.on('data', function(chunk){ rawData += chunk; });\r\n\t\t\t\t\t\t\tres.on('end', function(){\r\n\t\t\t\t\t\t\t\t// NOTE: SP errors come here, not `res.on(error)`, so check for errors!\r\n\t\t\t\t\t\t\t\tif ( rawData.indexOf('HTTP Error') > -1 ) {\r\n\t\t\t\t\t\t\t\t\t/* EX: bad URL is returned as\r\n\t\t\t\t\t\t\t\t\t\t<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\"http://www.w3.org/TR/html4/strict.dtd\">\r\n\t\t\t\t\t\t\t\t\t\t<HTML><HEAD><TITLE>Bad Request</TITLE>\r\n\t\t\t\t\t\t\t\t\t\t<META HTTP-EQUIV=\"Content-Type\" Content=\"text/html; charset=us-ascii\"></HEAD>\r\n\t\t\t\t\t\t\t\t\t\t<BODY><h2>Bad Request - Invalid URL</h2>\r\n\t\t\t\t\t\t\t\t\t\t<hr><p>HTTP Error 400. The request URL is invalid.</p>\r\n\t\t\t\t\t\t\t\t\t\t</BODY></HTML>\r\n\t\t\t\t\t\t\t\t\t*/\r\n\t\t\t\t\t\t\t\t\treject();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse if ( rawData.indexOf('{\"error\"') > -1 && rawData.indexOf('{\"code\"') > -1 ) {\r\n\t\t\t\t\t\t\t\t\t// EX: {\"error\":{\"code\":\"-1, Microsoft.SharePoint.SPException\",\"message\":{\"lang\":\"en-US\",\"value\":\"The field or property 'ColDoesntExist' does not exist.\"}}}\r\n\t\t\t\t\t\t\t\t\t// EX: {\"error\":{\"code\":\"-1, Microsoft.SharePoint.Client.InvalidClientQueryException\",\"message\":{\"lang\":\"en-US\",\"value\":\"A node of type 'EndOfInput' was read from the JSON reader when trying to read the start of an entry. A 'StartObject' node was expected.\"}}}\r\n\t\t\t\t\t\t\t\t\treject( JSON.parse(rawData).error.message.value + \"\\n\\nURL used: \" + objAjaxQuery.url );\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tresolve(rawData);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tres.on('error', function(e){\r\n\t\t\t\t\t\t\t\treject( JSON.parse(rawData).error.message.value + \"\\n\\nURL used: \" + objAjaxQuery.url );\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t// POST: Data is sent to SP via `write`\r\n\t\t\t\t\t\tif ( objAjaxQuery.data ) request.write(objAjaxQuery.data);\r\n\t\t\t\t\t\trequest.end();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// A:\r\n\t\t\t\t\t\tvar request = new XMLHttpRequest();\r\n\t\t\t\t\t\trequest.open(objAjaxQuery.type, objAjaxQuery.url, true);\r\n\r\n\t\t\t\t\t\t// B:\r\n\t\t\t\t\t\tObject.keys(objAjaxQuery.headers || {}).forEach(function(key){\r\n\t\t\t\t\t\t\trequest.setRequestHeader(key, objAjaxQuery.headers[key]);\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t// C:\r\n\t\t\t\t\t\trequest.onload = function() {\r\n\t\t\t\t\t\t\tif ( request.status >= 200 && request.status < 400 ) {\r\n\t\t\t\t\t\t\t\t// Try XML first as `owssvr` (versions) query returns a true XML document\r\n\t\t\t\t\t\t\t\tresolve(request.responseXML || request.responseText);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\treject( parseErrorMessage(request) + \"\\n\\nURL used: \" + objAjaxQuery.url );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t// D:\r\n\t\t\t\t\t\trequest.onerror = function() {\r\n\t\t\t\t\t\t\treject( parseErrorMessage(request) + \"\\n\\nURL used: \" + objAjaxQuery.url );\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\t// E:\r\n\t\t\t\t\t\trequest.send( objAjaxQuery.data ? objAjaxQuery.data : null );\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function(strErr){\r\n\t\t\t\t\treject(strErr);\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.then(function(data){\r\n\t\t\t\t// A: Parse string to JSON if needed\r\n\t\t\t\tdata = ( typeof data === 'string' && data.indexOf('{') == 0 ? JSON.parse(data) : data );\r\n\r\n\t\t\t\t// B: If result is a single object, make it an array for pasing below (Ex: '_api/site/Owner/Id')\r\n\t\t\t\tvar arrObjResult = ( data && data.d && !data.d.results && typeof data.d === 'object' && Object.keys(data.d).length > 0 ? [data.d] : [] );\r\n\r\n\t\t\t\t// C: Iterate over results\r\n\t\t\t\t// NOTE: Depending upon which REST endpoint used, SP can return results in various forms (!)\r\n\t\t\t\t// EX..: data.d.results is an [] of {}: [ {Title:'Brent Ely', Email:'Brent.Ely@microsoft.com'}, {}, {} ]\r\n\t\t\t\t// NOTE: Ensure results are an object because SP will return an entire HTML page as a result in some error cases!\r\n\r\n\t\t\t\tif ( objAjaxQuery.url.toLowerCase().indexOf('owssvr.dll') > -1 && objAjaxQuery.url.toLowerCase().indexOf('includeversions=true') > -1 ) {\r\n\t\t\t\t\t// IE11: When using jQuery AJAX for AppendText/Versions/getVersions, the `data` result must be parsed directly (no conversion) using `(data).find(\"z:row\")`\r\n\t\t\t\t\tinOpt.spArrData.push( data );\r\n\t\t\t\t}\r\n\t\t\t\telse if ( arrObjResult.length > 0 || (data && data.d && data.d.results && typeof data.d.results === 'object') ) {\r\n\t\t\t\t\t(arrObjResult.length > 0 ? arrObjResult : data.d.results).forEach(function(result){\r\n\t\t\t\t\t\tvar objRow = {};\r\n\r\n\t\t\t\t\t\tif ( inOpt.queryCols ) {\r\n\t\t\t\t\t\t\t// NOTE: `queryCols` can be either an object or an array\r\n\t\t\t\t\t\t\tif ( Array.isArray(inOpt.queryCols) ) {\r\n\t\t\t\t\t\t\t\tinOpt.queryCols.forEach(function(key){\r\n\t\t\t\t\t\t\t\t\tobjRow[key] = ( APP_OPTS.cleanColHtml && col.listDataType == 'string' ? colVal.replace(/<div(.|\\n)*?>/gi,'').replace(/<\\/div>/gi,'') : colVal );\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tObject.keys(inOpt.queryCols).forEach(function(key){\r\n\t\t\t\t\t\t\t\t\tvar col = inOpt.queryCols[key];\r\n\t\t\t\t\t\t\t\t\tvar arrCol = [];\r\n\t\t\t\t\t\t\t\t\tvar colVal = \"\";\r\n\r\n\t\t\t\t\t\t\t\t\t// B.3.1: Get value(s) for this key\r\n\r\n\t\t\t\t\t\t\t\t\t// Handle Lookups that return an array of 'results' (eg: `LookupMulti`)\r\n\t\t\t\t\t\t\t\t\tif ( col.dataName && col.dataName.indexOf('/') > -1\r\n\t\t\t\t\t\t\t\t\t\t&& result[col.dataName.split('/')[0]] && result[col.dataName.split('/')[0]].results )\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t// A:\r\n\t\t\t\t\t\t\t\t\t\t// NOTE: `listCols` can have \"Dept/Id\" and \"Dept/Title\", but SP only returns *ONE* result with both vals\r\n\t\t\t\t\t\t\t\t\t\t// ....: So, skip any subsequent listCol's once results have been captured\r\n\t\t\t\t\t\t\t\t\t\tif ( objRow[key] ) return;\r\n\r\n\t\t\t\t\t\t\t\t\t\t// B: Default for this column type is empty array as multi-lookup returns an array of `results`\r\n\t\t\t\t\t\t\t\t\t\tcolVal = [];\r\n\r\n\t\t\t\t\t\t\t\t\t\t// C: Add any results\r\n\t\t\t\t\t\t\t\t\t\tresult[col.dataName.split('/')[0]].results.forEach(function(objResult,idx){\r\n\t\t\t\t\t\t\t\t\t\t\t// EX: {__metadata:Object, Id:2, Title:\"Human Resources\"}\r\n\t\t\t\t\t\t\t\t\t\t\tif ( objResult.__metadata ) delete objResult.__metadata;\r\n\t\t\t\t\t\t\t\t\t\t\t// Capture any-and-all columns returned (aside from removal of above)\r\n\t\t\t\t\t\t\t\t\t\t\tcolVal.push( objResult );\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t// Handle Lookup/Person/Url/etc. Ex: 'Manager/Title'\r\n\t\t\t\t\t\t\t\t\telse if ( col.dataName && col.dataName.indexOf('/') > -1 ) {\r\n\t\t\t\t\t\t\t\t\t\t// NOTE: While most lookups are single-level ('Manager/Title') there can be deeper levels as well ('Users/Member/Id')\r\n\t\t\t\t\t\t\t\t\t\t// NOTE: dataName will be comma-sep fields when colName is an object with fields. (Ex: \"Member/Users/Id,Member/Users/Title\")\r\n\t\t\t\t\t\t\t\t\t\t// Loop over each field. Ex: 'Member/Id,Member/Title'->['Member/Id','Member/Title']\r\n\t\t\t\t\t\t\t\t\t\tcol.dataName.split(',').forEach(function(strField,idx){\r\n\t\t\t\t\t\t\t\t\t\t\t// A: Split lookup name\r\n\t\t\t\t\t\t\t\t\t\t\tvar arrKeys = strField.split('/');\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// B: Remove extraneous `__metadata` and `__deferred` objects\r\n\t\t\t\t\t\t\t\t\t\t\tif ( result[arrKeys[0]] && result[arrKeys[0]].__metadata ) delete result[arrKeys[0]].__metadata;\r\n\t\t\t\t\t\t\t\t\t\t\tif ( result[arrKeys[0]] && result[arrKeys[0]].__deferred ) delete result[arrKeys[0]].__deferred;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// C: Some lookups return arrays. Ex: 'Member/Users/Id' result => { Member:{ Users:{ results:[] } } }\r\n\t\t\t\t\t\t\t\t\t\t\t// HACK(ish): Avoid complex algorithm and only support up to 2-5 levels deep\r\n\t\t\t\t\t\t\t\t\t\t\tvar lastChild = null;\r\n\t\t\t\t\t\t\t\t\t\t\tif ( arrKeys.length == 2 ) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t// C.1:\r\n\t\t\t\t\t\t\t\t\t\t\t\tlastChild = result[arrKeys[0]];\r\n\t\t\t\t\t\t\t\t\t\t\t\tif ( lastChild && typeof lastChild === 'object' && Object.keys(lastChild)[0] == 'results' ) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tresult[arrKeys[0]] = lastChild.results;\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// C.2: Capture value\r\n\t\t\t\t\t\t\t\t\t\t\t\t// CASE 1: `dataName` was passed in by user: return the actual field user asked for.\r\n\t\t\t\t\t\t\t\t\t\t\t\t// EXAMPLE: `Title: { dataName:'Member/Title' }` = return Title:Title (not a Member.Title object)\r\n\t\t\t\t\t\t\t\t\t\t\t\t// NOTE: Detect use of names listCols by comparing key to dataName\r\n\t\t\t\t\t\t\t\t\t\t\t\tif ( key != arrKeys[0] && key != col.dataName ) colVal = result[arrKeys[0]][arrKeys[1]];\r\n\t\t\t\t\t\t\t\t\t\t\t\t// CASE 2: Other - in this case return the complete object (Ex: { Title:'Manager' })\r\n\t\t\t\t\t\t\t\t\t\t\t\t// IMPORTANT: This de facto returns all the *other* fields queried. Eg: 'Manager/Id' and 'Manager/Title' were in cols\r\n\t\t\t\t\t\t\t\t\t\t\t\t// We want to return a *single* object with these 2 elements, so they can be derefereced using 'Manger.Title' etc.\r\n\t\t\t\t\t\t\t\t\t\t\t\t// Capture any-and-all columns returned (aside from removal of above)\r\n\t\t\t\t\t\t\t\t\t\t\t\telse colVal = result[arrKeys[0]];\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\telse if ( arrKeys.length == 3 ) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t// C.1:\r\n\t\t\t\t\t\t\t\t\t\t\t\tlastChild = result[arrKeys[0]][arrKeys[1]];\r\n\t\t\t\t\t\t\t\t\t\t\t\tif ( lastChild && typeof lastChild === 'object' && Object.keys(lastChild)[0] == 'results' ) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tresult[arrKeys[0]][arrKeys[1]] = lastChild.results;\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// C.2: Capture value\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolVal = ( key != arrKeys[0] && key != col.dataName ? result[arrKeys[0]][arrKeys[1]][arrKeys[2]] : result[arrKeys[0]] );\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\telse if ( arrKeys.length == 4 ) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t// C.1:\r\n\t\t\t\t\t\t\t\t\t\t\t\tlastChild = result[arrKeys[0]][arrKeys[1]][arrKeys[2]];\r\n\t\t\t\t\t\t\t\t\t\t\t\tif ( lastChild && typeof lastChild === 'object' && Object.keys(lastChild)[0] == 'results' ) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tresult[arrKeys[0]][arrKeys[1]][arrKeys[2]] = lastChild.results;\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t// C.2: Capture value\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolVal = ( key != arrKeys[0] && key != col.dataName ? result[arrKeys[0]][arrKeys[1]][arrKeys[2]][arrKeys[3]] : result[arrKeys[0]] );\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\telse if ( arrKeys.length > 4 ) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('This is madness!!');\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\t\t// D: Value clean-up (things like empty multi-person fields may end up being `{}`)\r\n\t\t\t\t\t\t\t\t\t\tif ( typeof colVal === 'object' && !Array.isArray(colVal) && Object.keys(colVal).length == 0 ) colVal = [];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if ( col.dataName ) {\r\n\t\t\t\t\t\t\t\t\t\tarrCol = col.dataName.split('/');\r\n\t\t\t\t\t\t\t\t\t\tcolVal = ( arrCol.length > 1 ? result[arrCol[0]][arrCol[1]] : result[arrCol[0]] );\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t// DESIGN: If `dataType` exists, then transform result\r\n\t\t\t\t\t\t\t\t\t// TODO: vvv this is old right?\r\n\t\t\t\t\t\t\t\t\tif ( col.dataType == 'DateTime' ) objRow[key] = new Date(colVal);\r\n\t\t\t\t\t\t\t\t\telse objRow[key] = ( APP_OPTS.cleanColHtml && col.listDataType == 'string' ? colVal.replace(/<div(.|\\n)*?>/gi,'').replace(/<\\/div>/gi,'') : colVal );\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tObject.keys(result).forEach(function(key){\r\n\t\t\t\t\t\t\t\tvar val = result[key];\r\n\t\t\t\t\t\t\t\tobjRow[key] = val;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// TODO: 20171107: Add `etag` option to return etag (check to ensure it exists, then set prop value)\r\n\t\t\t\t\t\tif ( objRow.__metadata && !inOpt.metadata ) delete objRow.__metadata;\r\n\r\n\t\t\t\t\t\t// C: Support \"next\" functionality\r\n\t\t\t\t\t\tif ( data.d.__next ) {\r\n\t\t\t\t\t\t\tvar objSkip = { prevId:'', maxItems:'' };\r\n\t\t\t\t\t\t\tdata.d.__next.split('&').forEach(function(str,idx){\r\n\t\t\t\t\t\t\t\tif ( str.indexOf('p_ID%3d') > -1 ) {\r\n\t\t\t\t\t\t\t\t\tobjSkip.prevId = str.split('&')[0].split('%3d')[2];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse if ( str.indexOf('%24top=') > -1 ) {\r\n\t\t\t\t\t\t\t\t\tobjSkip.maxItems = str.substring(str.lastIndexOf('=')+1);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tif ( objSkip.prevId && objSkip.maxItems ) objRow.__next = objSkip;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tinOpt.spArrData.push( objRow );\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t// EX..: data.d or data is an [object]: { listTitle:'Game Systems', numberOfItems:25 }\r\n\t\t\t\telse if ( (data && data.d ? data.d : (data ? data : false)) && typeof (data.d || data) === 'object' && Object.keys(data.d || data).length > 0 ) {\r\n\t\t\t\t\tvar objRow = {};\r\n\t\t\t\t\tvar objData = (data.d || data);\r\n\r\n\t\t\t\t\tObject.keys(objData).forEach(function(key){\r\n\t\t\t\t\t\tvar result = objData[key];\r\n\t\t\t\t\t\tobjRow[key] = result;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif ( objRow.__metadata && !inOpt.metadata ) delete objRow.__metadata;\r\n\t\t\t\t\tinOpt.spArrData.push( objRow );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// D:\r\n\t\t\t\tresolve( inOpt.spArrData );\r\n\t\t\t})\r\n\t\t\t.catch(function(strErr){\r\n\t\t\t\t// ROBUST: Renew token when needed (use `gRetryCounter` to prevent race condition)\r\n\t\t\t\t// CASE '403': SP2013-2016 Expired Token error: Microsoft.SharePoint.SPException (-2130575252): \"X-RequestDigest expired form digest\"\r\n\t\t\t\t// var strErrCode = jqXHR.status.toString();\r\n\t\t\t\t// var strSpeCode = JSON.parse(jqXHR.responseText).error['code'].split(',')[0];\r\n\t\t\t\t// INFO: ( strErrCode == '403' && strSpeCode == '-2130575252' )\r\n\t\t\t\tif ( !(NODEJS && !APP_OPTS.nodeEnabled) && typeof strErr == 'string' && strErr.indexOf('(403)') > -1 && gRetryCounter <= APP_OPTS.maxRetries ) {\r\n\t\t\t\t\tPromise.resolve()\r\n\t\t\t\t\t.then(function(){\r\n\t\t\t\t\t\treturn sprLib.renewSecurityToken();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then(function(){\r\n\t\t\t\t\t\tvar digest = (document && document.getElementById('__REQUESTDIGEST') ? document.getElementById('__REQUESTDIGEST').value : null);\r\n\t\t\t\t\t\tif (DEBUG) console.log('err-403: token renewed');\r\n\t\t\t\t\t\t// Some operations (ex: CRUD) will include the token value in header. It must be refreshed as well (or the new tolem is pointless!)\r\n\t\t\t\t\t\tif ( inOpt.headers && inOpt.headers['X-RequestDigest'] ) inOpt.headers['X-RequestDigest'] = digest;\r\n\t\t\t\t\t\tgRetryCounter++;\r\n\t\t\t\t\t\tsprLib.rest(inOpt);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tgRetryCounter = 0;\r\n\t\t\t\t\treject(strErr);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t// API: SITE (or WEB)\r\n\t/**\r\n\t* NOTE: `site` and `web` may be used interchangably (`/_api/site` is the top-level Web site and all its subsites)\r\n\t* `web` is a securable web resource (aka: a SP website)\r\n\t* https://msdn.microsoft.com/library/microsoft.sharepoint.spsite \"top-level Web site and all its subsites. Each SPSite object, or site collection, is represented within an SPSiteCollection object\"\r\n\t*/\r\n\tsprLib.site = function site(inUrl) {\r\n\t\t// Variables\r\n\t\tvar _newSite = {};\r\n\t\tvar _urlBase = (inUrl ? (inUrl+'/').replace(/\\/+$/g,'/') : ''); // Guarantee that baseUrl will end with a forward slash\r\n\r\n\t\t/**\r\n\t\t* Get Site information:\r\n\t\t* Keys: (AssociatedMemberGroup, AssociatedOwnerGroup, AssociatedVisitorGroup, Created, Description, Id, Language, LastItemModifiedDate, LastItemUserModifiedDate, Owner, RequestAccessEmail, SiteLogoUrl, Title, Url, WebTemplate)\r\n\t\t*\r\n\t\t* @example - no args - omitting arguments means \"current site\"\r\n\t\t* sprLib.site().info().then( objSite => console.table([objSite]) );\r\n\t\t*\r\n\t\t* @example - get site by ID\r\n\t\t* sprLib.site({ id:'12345-abcd-12345' }).info().then(objSite => console.table([objSite]));\r\n\t\t*\r\n\t\t* @return {Promise} - return `Promise` containing Site info object\r\n\t\t*/\r\n\t\t_newSite.info = function() {\r\n\t\t\treturn new Promise(function(resolve, reject) {\r\n\t\t\t\tPromise.all([\r\n\t\t\t\t\tsprLib.rest({\r\n\t\t\t\t\t\turl: _urlBase+'_api/web',\r\n\t\t\t\t\t\tqueryCols: ['Id','Title','Description','Language','Created',\r\n\t\t\t\t\t\t\t'LastItemModifiedDate','LastItemUserModifiedDate','RequestAccessEmail','SiteLogoUrl','Url','WebTemplate',\r\n\t\t\t\t\t\t\t'AssociatedOwnerGroup/Id',        'AssociatedMemberGroup/Id',        'AssociatedVisitorGroup/Id',\r\n\t\t\t\t\t\t\t'AssociatedOwnerGroup/OwnerTitle','AssociatedMemberGroup/OwnerTitle','AssociatedVisitorGroup/OwnerTitle',\r\n\t\t\t\t\t\t\t'AssociatedOwnerGroup/Title',     'AssociatedMemberGroup/Title',     'AssociatedVisitorGroup/Title'\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tcache: false\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tsprLib.rest({\r\n\t\t\t\t\t\turl: _urlBase+'_api/site',\r\n\t\t\t\t\t\tqueryCols: ['Owner/Email','Owner/LoginName','Owner/Title','Owner/IsSiteAdmin'],\r\n\t\t\t\t\t\tcache: false\r\n\t\t\t\t\t})\r\n\t\t\t\t])\r\n\t\t\t\t.then(function(arrAllArrays){\r\n\t\t\t\t\t// A: Combine results into one object\r\n\t\t\t\t\tvar objSite = arrAllArrays[0][0];\r\n\t\t\t\t\tobjSite.Owner = arrAllArrays[1][0].Owner;\r\n\r\n\t\t\t\t\t// B: Remove junky metadata\r\n\t\t\t\t\tdelete objSite.Owner.__metadata;\r\n\t\t\t\t\tdelete objSite.AssociatedMemberGroup.__metadata;\r\n\t\t\t\t\tdelete objSite.AssociatedOwnerGroup.__metadata;\r\n\t\t\t\t\tdelete objSite.AssociatedVisitorGroup.__metadata;\r\n\r\n\t\t\t\t\t// C: Remove columns that may not be present\r\n\t\t\t\t\t// `LastItemUserModifiedDate` exists in SP2016/SharePoint-Online, but not in SP2013 on-prem\r\n\t\t\t\t\tif ( objSite.hasOwnProperty('LastItemUserModifiedDate') && !objSite.LastItemUserModifiedDate ) delete objSite.LastItemUserModifiedDate;\r\n\r\n\t\t\t\t\t// D: Resolve results (NOTE: if site was not found, an empty object is the correct result)\r\n\t\t\t\t\tresolve( objSite );\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function(strErr){\r\n\t\t\t\t\treject( strErr );\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t* Get Site Lists/Libraries (name and about 12 other fields)\r\n\t\t*\r\n\t\t* @example\r\n\t\t* sprLib.site().lists().then( function(arr){ console.table(arr) } );\r\n\t\t*\r\n\t\t* @return {Promise} - Return `Promise` containing Site Lists/Libraries\r\n\t\t*/\r\n\t\t_newSite.lists = function() {\r\n\t\t\treturn new Promise(function(resolve, reject) {\r\n\t\t\t\tsprLib.rest({\r\n\t\t\t\t\turl: _urlBase+'_api/web/lists',\r\n\t\t\t\t\tqueryCols: [\r\n\t\t\t\t\t\t'Id','Title','Description','ItemCount','BaseType','BaseTemplate','Hidden','ImageUrl','ParentWebUrl','RootFolder/ServerRelativeUrl'\r\n\t\t\t\t\t]\r\n\t\t\t\t})\r\n\t\t\t\t.then(function(arrData){\r\n\t\t\t\t\t// A: Modify some values\r\n\t\t\t\t\tarrData.forEach(function(item,idx){\r\n\t\t\t\t\t\t// A: Flatten/Elevate `ServerRelativeUrl` value\r\n\t\t\t\t\t\titem.ServerRelativeUrl = (item.RootFolder && item.RootFolder.ServerRelativeUrl ? item.RootFolder.ServerRelativeUrl : null);\r\n\t\t\t\t\t\tif ( item.RootFolder ) delete item.RootFolder;\r\n\r\n\t\t\t\t\t\t// B: Decode type\r\n\t\t\t\t\t\titem.BaseType = ENUM_BASETYPES[item.BaseType] || item.BaseType;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// B: Resolve results (NOTE: empty array is the correct default result)\r\n\t\t\t\t\tresolve( arrData || [] );\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function(strErr){\r\n\t\t\t\t\treject( strErr );\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// TODO: v1.7.0: add `inOpt` to subsites\r\n\r\n\t\t/**\r\n\t\t* Get Subsites\r\n\t\t*\r\n\t\t* @return {Promise} - return `Promise` containing Subsites\r\n\t\t*/\r\n\t\t_newSite.subsites = function() {\r\n\t\t\treturn new Promise(function(resolve, reject) {\r\n\t\t\t\tsprLib.rest({\r\n\t\t\t\t\turl: _urlBase+'_api/web/webs',\r\n\t\t\t\t\tqueryCols: {\r\n\t\t\t\t\t\tId:\t\t\t\t{ dataName:'Id'\t\t\t\t\t\t,dispName:'Id'\t\t\t\t\t},\r\n\t\t\t\t\t\tName:\t\t\t{ dataName:'Title'\t\t\t\t\t,dispName:'Subsite Name'\t\t},\r\n\t\t\t\t\t\tUrlAbs:\t\t\t{ dataName:'Url'\t\t\t\t\t,dispName:'Absolute URL'\t\t},\r\n\t\t\t\t\t\tUrlRel:\t\t\t{ dataName:'ServerRelativeUrl'      ,dispName:'Relative URL'\t\t},\r\n\t\t\t\t\t\tCreated:\t\t{ dataName:'Created'\t\t\t\t,dispName:'Date Created'\t\t},\r\n\t\t\t\t\t\tModified:\t\t{ dataName:'LastItemModifiedDate'\t,dispName:'Date Last Modified'\t},\r\n\t\t\t\t\t\tLanguage:\t\t{ dataName:'Language'\t\t\t\t,dispName:'Language'\t\t\t},\r\n\t\t\t\t\t\tSiteLogoUrl:\t{ dataName:'SiteLogoUrl'\t\t\t,dispName:'Site Logo URL'\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.then(function(arrData){\r\n\t\t\t\t\t// A: Resolve results (NOTE: empty array is the correct default result)\r\n\t\t\t\t\tresolve( arrData || [] );\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function(strErr){\r\n\t\t\t\t\treject( strErr );\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t* Get Site base permissions\r\n\t\t* Returns array of objects with `Member` and `Roles` properties\r\n\t\t*\r\n\t\t* @example - sprLib.site().perms().then( arr => console.table(arr) );\r\n\t\t* //.--------------------------------------------------------------------------------------------------------------------------------------------------.\r\n\t\t* //|                                    Member                                    |                               Roles                               |\r\n\t\t* //|------------------------------------------------------------------------------|-------------------------------------------------------------------|\r\n\t\t* //| {\"Title\":\"Brent Ely\",   \"PrincipalType\":\"User\",            \"PrincipalId\":9}  | [{\"Hidden\":false,\"Name\":\"Design\"},{\"Hidden\":false,\"Name\":\"Edit\"}] |\r\n\t\t* //| {\"Title\":\"Dev Owners\",  \"PrincipalType\":\"SharePoint Group\",\"PrincipalId\":14} | [{\"Hidden\":false,\"Name\":\"Full Control\"}]                          |\r\n\t\t* //| {\"Title\":\"Dev Members\", \"PrincipalType\":\"SharePoint Group\",\"PrincipalId\":15} | [{\"Hidden\":false,\"Name\":\"Edit\"}]                                  |\r\n\t\t* //| {\"Title\":\"Dev Visitors\",\"PrincipalType\":\"SharePoint Group\",\"PrincipalId\":16} | [{\"Hidden\":false,\"Name\":\"Read\"}]                                  |\r\n\t\t* //'--------------------------------------------------------------------------------------------------------------------------------------------------'\r\n\t\t*\r\n\t\t* @return {Promise} - return `Promise` containing Site Permission object { Member:{}, Roles:[] }\r\n\t\t*/\r\n\t\t_newSite.perms = function() {\r\n\t\t\treturn new Promise(function(resolve, reject) {\r\n\t\t\t\tsprLib.rest({\r\n\t\t\t\t\turl: _urlBase+'_api/web/roleAssignments',\r\n\t\t\t\t\tqueryCols: ['PrincipalId','Member/PrincipalType','Member/Title','RoleDefinitionBindings/Name','RoleDefinitionBindings/Hidden']\r\n\t\t\t\t})\r\n\t\t\t\t.then(function(arrData){\r\n\t\t\t\t\t// STEP 1: Transform: Results s/b 2 keys with props inside each\r\n\t\t\t\t\tarrData.forEach(function(objItem,idx){\r\n\t\t\t\t\t\t// A: \"Rename\" the `RoleDefinitionBindings` key to be user-friendly\r\n\t\t\t\t\t\tObject.defineProperty(objItem, 'Roles', Object.getOwnPropertyDescriptor(objItem, 'RoleDefinitionBindings'));\r\n\t\t\t\t\t\tdelete objItem.RoleDefinitionBindings;\r\n\r\n\t\t\t\t\t\t// B: Move `PrincipalId` inside {Member}\r\n\t\t\t\t\t\tobjItem.Member.PrincipalId = objItem.PrincipalId;\r\n\t\t\t\t\t\tdelete objItem.PrincipalId;\r\n\r\n\t\t\t\t\t\t// C: Decode PrincipalType into text\r\n\t\t\t\t\t\tobjItem.Member.PrincipalType = ENUM_PRINCIPALTYPES[objItem.Member.PrincipalType] || objItem.Member.PrincipalType;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// TODO?: OPTION: \"Show Group Members\", then do lookups below, otherwise, just show users/group names\r\n\t\t\t\t\t// TODO?: use PrincipalType to find groups and query for thier users, then the full picture is done!\r\n\t\t\t\t\t//.then(arrOwnerId => { return sprLib.rest({ url:site.UrlAbs+'/_api/web/SiteGroups/GetById('+ arrOwnerId[0].Id +')/Users', queryCols:['Title','Email'] }) })\r\n\t\t\t\t\t//.then(arrUsers   => arrUsers.forEach((user,idx) => site.OwnersGroupUsers += ('<div class=\"itemBox\">'+ user.Title +'<span style=\"display:none\">; </span></div>') ))\r\n\r\n\t\t\t\t\t// STEP 2: Resolve results (NOTE: empty array is the correct default result)\r\n\t\t\t\t\tresolve( arrData || [] );\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function(strErr){\r\n\t\t\t\t\treject( strErr );\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t* Get SiteCollection Roles\r\n\t\t*\r\n\t\t* @return {Promise} - return `Promise` containing Roles\r\n\t\t*/\r\n\t\t_newSite.roles = function() {\r\n\t\t\treturn new Promise(function(resolve, reject) {\r\n\t\t\t\tsprLib.rest({\r\n\t\t\t\t\turl: _urlBase+'_api/web/roleDefinitions',\r\n\t\t\t\t\tqueryCols: ['Id','Name','Description','RoleTypeKind','Hidden']\r\n\t\t\t\t})\r\n\t\t\t\t.then(function(arrData){\r\n\t\t\t\t\t// A: Resolve results (NOTE: empty array is the correct default result)\r\n\t\t\t\t\tresolve( arrData || [] );\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function(strErr){\r\n\t\t\t\t\treject( strErr );\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t* Get all Groups under the SiteCollection or the Groups under a given Subsite\r\n\t\t*\r\n\t\t* @example\r\n\t\t* //.----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------.\r\n\t\t* //| Id |             Description            |         Title          |    OwnerTitle     |  PrincipalType   | AllowMembersEditMembership |                     Users                                         |\r\n\t\t* //|----|------------------------------------|------------------------|-------------------|------------------|----------------------------|-------------------------------------------------------------------|\r\n\t\t* //|  8 | contribute permissions: Dev Site   | Dev Site Members       | Dev Site Owners   | SharePoint Group | true                       | []                                                                |\r\n\t\t* //|  6 | full control permissions: Dev Site | Dev Site Owners        | Dev Site Owners   | SharePoint Group | false                      | [{\"Id\":99,\"LoginName\":\"brent@microsoft.com\",\"Title\":\"Brent Ely\"}] |\r\n\t\t* //|  7 | read permissions: Dev Site         | Dev Site Visitors      | Dev Site Owners   | SharePoint Group | false                      | []                                                                |\r\n\t\t* //.----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------.\r\n\t\t*\r\n\t\t* @return {Promise} - return `Promise` containing Groups\r\n\t\t*/\r\n\t\t_newSite.groups = function(inOpt) {\r\n\t\t\treturn new Promise(function(resolve, reject) {\r\n\t\t\t\tvar arrData = [];\r\n\t\t\t\tvar arrQuery = [];\r\n\r\n\t\t\t\t// STEP 1: Options check\r\n\t\t\t\tif ( inOpt && Object.keys(inOpt).length > 0 && !inOpt.hasOwnProperty('id') && !inOpt.hasOwnProperty('title') ) {\r\n\t\t\t\t\tconsole.warn('Warning..: Check your options! Available `site().groups()` options are: `id`,`title`');\r\n\t\t\t\t\tconsole.warn('Result...: Invalid filter option: All site groups will be returned');\r\n\t\t\t\t\t// NOTE: Treat junk filter as null (return all Groups)\r\n\t\t\t\t\tinOpt = null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// STEP 2: Query group(s)\r\n\t\t\t\t// LOGIC: If `inUrl` exists, then just get the Groups from that site, otherwise, return SiteCollection Groups\r\n\t\t\t\tif ( inUrl ) {\r\n\t\t\t\t\t// TODO: 1.7.0: Stop querying 1000 groups - use same query as REST\r\n\t\t\t\t\tvar arrPromises = [];\r\n\r\n\t\t\t\t\tvar strFilter = 'Member/PrincipalType eq 8'; // Default is all Groups\r\n\t\t\t\t\tif ( inOpt && inOpt.id ) strFilter = \"Member/Id eq \"+inOpt.id;\r\n\t\t\t\t\telse if ( inOpt && inOpt.title ) strFilter = \"Member/Title eq '\"+inOpt.title+\"'\";\r\n\r\n\t\t\t\t\t// STEP 1: Get Groups\r\n\t\t\t\t\tsprLib.rest({\r\n\t\t\t\t\t\turl: _urlBase+'_api/web/RoleAssignments',\r\n\t\t\t\t\t\tqueryCols: [\r\n\t\t\t\t\t\t\t'Member/Id','Member/Title','Member/Description','Member/OwnerTitle',\r\n\t\t\t\t\t\t\t'Member/PrincipalType','Member/AllowMembersEditMembership'\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tqueryFilter: strFilter,\r\n\t\t\t\t\t\tqueryLimit: 5000\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then(function(arrGroups){\r\n\t\t\t\t\t\t// STEP 2: Create array of Groups and Promises\r\n\t\t\t\t\t\tarrGroups.forEach(function(grp,idx){\r\n\t\t\t\t\t\t\t// A: Create object\r\n\t\t\t\t\t\t\tarrData.push({\r\n\t\t\t\t\t\t\t\tId: grp.Member.Id,\r\n\t\t\t\t\t\t\t\tTitle: grp.Member.Title,\r\n\t\t\t\t\t\t\t\tDescription: grp.Member.Description,\r\n\t\t\t\t\t\t\t\tOwnerTitle: grp.Member.OwnerTitle,\r\n\t\t\t\t\t\t\t\tPrincipalType: (ENUM_PRINCIPALTYPES[grp.Member.PrincipalType] || grp.Member.PrincipalType),\r\n\t\t\t\t\t\t\t\tAllowMembersEditMembership: grp.Member.AllowMembersEditMembership,\r\n\t\t\t\t\t\t\t\tUsers: []\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// B: Create Users promise\r\n\t\t\t\t\t\t\tarrPromises.push(\r\n\t\t\t\t\t\t\t\tsprLib.rest({\r\n\t\t\t\t\t\t\t\t\turl: _urlBase+'_api/web/SiteGroups/GetById('+ grp.Member.Id +')/Users',\r\n\t\t\t\t\t\t\t\t\tqueryCols: ['Id','LoginName','Title'],\r\n\t\t\t\t\t\t\t\t\tqueryLimit: 5000\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t// STEP 3: Populate Group's Users\r\n\t\t\t\t\t\tPromise.all(arrPromises)\r\n\t\t\t\t\t\t.then(function(arrAllArrays,idx){\r\n\t\t\t\t\t\t\tarrAllArrays.forEach(function(arrUsers,idx){\r\n\t\t\t\t\t\t\t\tarrUsers.forEach(function(user,idy){ arrData[idx].Users.push({ Id:user.Id, LoginName:user.LoginName, Title:user.Title }); });\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t// Resolve results (NOTE: empty array is the correct default result)\r\n\t\t\t\t\t\t\tresolve( arrData || [] );\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(function(strErr){\r\n\t\t\t\t\t\treject( strErr );\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvar strFilter = ''; // Default is empty filter\r\n\t\t\t\t\tif ( inOpt && inOpt.id ) strFilter = \"Id eq \"+inOpt.id;\r\n\t\t\t\t\telse if ( inOpt && inOpt.title ) strFilter = \"Title eq '\"+inOpt.title+\"'\";\r\n\r\n\t\t\t\t\tsprLib.rest({\r\n\t\t\t\t\t\turl: _urlBase+'_api/web/SiteGroups',\r\n\t\t\t\t\t\tqueryCols: [\r\n\t\t\t\t\t\t\t'Id','Title','PrincipalType','Description','OwnerTitle','AllowMembersEditMembership',\r\n\t\t\t\t\t\t\t'Users/Id','Users/Title','Users/LoginName'\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tqueryFilter: strFilter,\r\n\t\t\t\t\t\tqueryLimit: 5000\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then(function(arrData){\r\n\t\t\t\t\t\t// A: Filter internal/junk groups\r\n\t\t\t\t\t\tif ( arrData && Array.isArray(arrData) ) {\r\n\t\t\t\t\t\t\tarrData = arrData.filter(function(group){ return group.Title.indexOf('SharingLinks') == -1 });\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// B: Decode PrincipalType\r\n\t\t\t\t\t\tarrData.forEach(function(item,idx){ item.PrincipalType = ENUM_PRINCIPALTYPES[item.PrincipalType] || item.PrincipalType });\r\n\r\n\t\t\t\t\t\t// C: Resolve results (NOTE: empty array is the correct default result)\r\n\t\t\t\t\t\tresolve( arrData || [] );\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(function(strErr){\r\n\t\t\t\t\t\treject( strErr );\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t* Get SiteCollection (all) Users or Site (subsite) Users\r\n\t\t*\r\n\t\t* @example\r\n\t\t* //.--------------------------------------------------------------------------------------------------------------------------------------.\r\n\t\t* //| Id |               LoginName               |   Title   |        Email        | IsSiteAdmin |                 Groups                  |\r\n\t\t* //|----|---------------------------------------|-----------|---------------------|-------------|-----------------------------------------|\r\n\t\t* //|  9 | i:0#.f|membership|brent@microsoft.com | Brent Ely | brent@microsoft.com | true        | [{\"Id\":14,\"Title\":\"Child Site Owners\"}] |\r\n\t\t* //'--------------------------------------------------------------------------------------------------------------------------------------'\r\n\t\t*\r\n\t\t* @return {Promise} - return `Promise` containing Users\r\n\t\t*/\r\n\t\t_newSite.users = function(inOpt) {\r\n\t\t\treturn new Promise(function(resolve, reject) {\r\n\t\t\t\t// STEP 1: Options check\r\n\t\t\t\tif ( inOpt && Object.keys(inOpt).length > 0 && !inOpt.hasOwnProperty('id') && !inOpt.hasOwnProperty('title') ) {\r\n\t\t\t\t\tconsole.warn('Warning..: Check your options! Available `site().users()` options are: `id`,`title`');\r\n\t\t\t\t\tconsole.warn('Result...: Invalid filter option: All site users will be returned');\r\n\t\t\t\t\t// NOTE: Treat junk filter as null (return all Groups)\r\n\t\t\t\t\tinOpt = null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// STEP 2: Query group(s)\r\n\t\t\t\t// LOGIC: If `inUrl` exists, then just get the Groups from that site, otherwise, return SiteCollection Groups\r\n\t\t\t\tif ( inUrl ) {\r\n\t\t\t\t\t// NOTE: Site `users` are: Users with RoleAssignments -plus- all users in Groups with RoleAssignments\r\n\t\t\t\t\t// A: Get User [direct] grants/perms\r\n\t\t\t\t\t// B: Get Group Members [Users] that have grants/perms from group membership\r\n\t\t\t\t\t// FIXME: LIMIT: Library only supports up to 5000 results! TODO: add paging\r\n\t\t\t\t\tPromise.all([\r\n\t\t\t\t\t\tsprLib.rest({\r\n\t\t\t\t\t\t\turl: _urlBase+'_api/web/RoleAssignments',\r\n\t\t\t\t\t\t\tqueryCols: ['Member/Id','Member/Email','Member/LoginName','Member/Title','Member/IsSiteAdmin'],\r\n\t\t\t\t\t\t\tqueryFilter: 'Member/PrincipalType eq 1',\r\n\t\t\t\t\t\t\tqueryLimit: 5000\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tsprLib.rest({\r\n\t\t\t\t\t\t\turl: _urlBase+'_api/web/RoleAssignments',\r\n\t\t\t\t\t\t\tqueryCols: ['Member/Id','Member/Title','Member/Users/Id','Member/Users/Email','Member/Users/LoginName','Member/Users/Title','Member/Users/IsSiteAdmin'],\r\n\t\t\t\t\t\t\tqueryFilter: 'Member/PrincipalType eq 8',\r\n\t\t\t\t\t\t\tqueryLimit: 5000\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t])\r\n\t\t\t\t\t.then(function(arrAllArrays){\r\n\t\t\t\t\t\t// STEP 1: Compile results\r\n\t\t\t\t\t\tvar arrSiteUsers = [];\r\n\t\t\t\t\t\tvar objTempUsers = {};\r\n\r\n\t\t\t\t\t\t// A: Result is an array of user objects\r\n\t\t\t\t\t\t// EX: [ {Member: {Id:9,Title:'Brent'}}, {Member:[...]} ]\r\n\t\t\t\t\t\tarrAllArrays[0].forEach(function(obj){\r\n\t\t\t\t\t\t\tobj.Member.Groups = [];\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t!inOpt\r\n\t\t\t\t\t\t\t\t|| ( inOpt && inOpt.id    && inOpt.id    == obj.Member.Id    )\r\n\t\t\t\t\t\t\t\t|| ( inOpt && inOpt.title && inOpt.title == obj.Member.Title )\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\tarrSiteUsers.push( obj.Member );\r\n\t\t\t\t\t\t\t\tobjTempUsers[obj.Member.Id] = obj.Member;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t// B: Result is an array of `Member` objects\r\n\t\t\t\t\t\t// EX: [ {Member: {Id:1, Title:'Members', Users:[{Id:9,Title:'Brent'},{Id:10,Title:'Elon Musk'}]}}, {Member:[...]} ]\r\n\t\t\t\t\t\tarrAllArrays[1].forEach(function(obj){\r\n\t\t\t\t\t\t\tif ( obj.Member.Users && obj.Member.Users.length > 0 ) {\r\n\t\t\t\t\t\t\t\tobj.Member.Users.forEach(function(user){\r\n\t\t\t\t\t\t\t\t\t// A: Remove __metadata (if any - since it's in a sub-object, `metadata:false` will not guarantee absence)\r\n\t\t\t\t\t\t\t\t\tif ( user.__metadata ) delete user.__metadata;\r\n\r\n\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t!inOpt\r\n\t\t\t\t\t\t\t\t\t\t|| ( inOpt && inOpt.id    && inOpt.id    == user.Id    )\r\n\t\t\t\t\t\t\t\t\t\t|| ( inOpt && inOpt.title && inOpt.title == user.Title )\r\n\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t// B: Add group\r\n\t\t\t\t\t\t\t\t\t\tif ( !user.Groups ) user.Groups = [];\r\n\t\t\t\t\t\t\t\t\t\tuser.Groups.push({ Id:obj.Member.Id, Title:obj.Member.Title });\r\n\r\n\t\t\t\t\t\t\t\t\t\t// C: Add User or Add this Group to existing User (ensure uniqueness)\r\n\t\t\t\t\t\t\t\t\t\tif ( !objTempUsers[user.Id] ) {\r\n\t\t\t\t\t\t\t\t\t\t\tarrSiteUsers.push( user );\r\n\t\t\t\t\t\t\t\t\t\t\tobjTempUsers[user.Id] = obj.Member;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\tif ( !objTempUsers[user.Id].Groups ) objTempUsers[user.Id].Groups = [];\r\n\t\t\t\t\t\t\t\t\t\t\tobjTempUsers[user.Id].Groups.push({ Id:obj.Member.Id, Title:obj.Member.Title });\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t// LAST: Resolve results (NOTE: empty array is the correct default result)\r\n\t\t\t\t\t\tresolve( arrSiteUsers || [] );\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(function(strErr){\r\n\t\t\t\t\t\treject( strErr );\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// SiteCollection [All] Users\r\n\t\t\t\t\tsprLib.rest({\r\n\t\t\t\t\t\turl: _urlBase+'_api/web/SiteUsers',\r\n\t\t\t\t\t\tqueryCols: ['Id','Email','LoginName','Title','IsSiteAdmin','Groups/Id','Groups/Title'],\r\n\t\t\t\t\t\tqueryFilter: 'PrincipalType eq 1',\r\n\t\t\t\t\t\tqueryLimit: 5000\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then(function(arrData){\r\n\t\t\t\t\t\tvar arrSiteUsers = [];\r\n\r\n\t\t\t\t\t\t// A: Compile results\r\n\t\t\t\t\t\tarrData.forEach(function(user){\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t!inOpt\r\n\t\t\t\t\t\t\t\t|| ( inOpt && inOpt.id    && inOpt.id    == user.Id    )\r\n\t\t\t\t\t\t\t\t|| ( inOpt && inOpt.title && inOpt.title == user.Title )\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t// B: Filter internal/junk users\r\n\t\t\t\t\t\t\t\tif ( user.Title.indexOf('spocrwl') == -1 && user.Id < 1000000000 ) arrSiteUsers.push(user)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t// B: Resolve results (NOTE: empty array is the correct default result)\r\n\t\t\t\t\t\tresolve( arrSiteUsers || [] );\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(function(strErr){\r\n\t\t\t\t\t\treject( strErr );\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// TODO: FUTURE: contentTypes & Features\r\n\t\t/*\r\n\t\t\t_newSite.contentTypes = function() {\r\n\t\t\t\t// ContentTypes: https://contoso.sharepoint.com/sites/dev/_api/web/ContentTypes\r\n\t\t\t}\r\n\t\t\t_newSite.features = function() {\r\n\t\t\t\t// Features: https://contoso.sharepoint.com/sites/dev/_api/site/Features\r\n\t\t\t}\r\n\t\t*/\r\n\r\n\t\t// TODO: FUTURE: Usage\r\n\t\t/*\r\n\t\t\tFYI:\r\n\t\t\t/sites/dev/_api/site/Usage\r\n\t\t\t/sites/dev/sandbox/_api/site/Usage\r\n\t\t\t^^^ same result (Storage is whole site collection - not individual webs!)\r\n\r\n\t\t\tsprLib.rest({\r\n\t\t\t\turl: '_api/site/usage',\r\n\t\t\t\tqueryCols: ['Usage/Storage','Usage/StoragePercentageUsed']\r\n\t\t\t})\r\n\t\t\t<d:Usage xmlns:d=\"http://schemas.microsoft.com/ado/2007/08/dataservices\" xmlns:m=\"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\" xmlns:georss=\"http://www.georss.org/georss\" xmlns:gml=\"http://www.opengis.net/gml\" m:type=\"SP.UsageInfo\">\r\n\t\t\t\t<d:Bandwidth m:type=\"Edm.Int64\">0</d:Bandwidth>\r\n\t\t\t\t<d:DiscussionStorage m:type=\"Edm.Int64\">0</d:DiscussionStorage>\r\n\t\t\t\t<d:Hits m:type=\"Edm.Int64\">0</d:Hits>\r\n\t\t\t\t<d:Storage m:type=\"Edm.Int64\">512050423</d:Storage>\r\n\t\t\t\t<d:StoragePercentageUsed m:type=\"Edm.Double\">1.8628285870363472E-05</d:StoragePercentageUsed>\r\n\t\t\t\t<d:Visits m:type=\"Edm.Int64\">0</d:Visits>\r\n\t\t\t</d:Usage>\r\n\t\t*/\r\n\r\n\t\t// LAST: Return this List to enable chaining\r\n\t\treturn _newSite;\r\n\t}\r\n\r\n\t// API: USER (Current or Query User by Props)\r\n\tsprLib.user = function user(inOpt) {\r\n\t\tvar _newUser = {};\r\n\t\tvar _urlBase = \"_api/Web\";\r\n\t\tvar _urlRest = \"/CurrentUser?\"; // Default to current user if no options were provided\r\n\r\n\t\t// STEP 1: Options setup/check\r\n\t\t// A: Options check\r\n\t\t// Check for existance of any keys to filter out `{}` that is sometimes passed - dont warn about those, treat as empty\r\n\t\tif ( inOpt && Object.keys(inOpt).length > 0\r\n\t\t\t&& !inOpt.hasOwnProperty('id') && !inOpt.hasOwnProperty('email')\r\n\t\t\t&& !inOpt.hasOwnProperty('login') && !inOpt.hasOwnProperty('title')\r\n\t\t) {\r\n\t\t\tconsole.warn('Warning: Check your options! Available `user()` options are: `id`,`email`,`login`,`title`');\r\n\t\t\tconsole.warn('Result: Current user is being returned');\r\n\t\t\t// NOTE: Treat junk params as null (Clear options to remove junk entries)\r\n\t\t\tinOpt = {};\r\n\t\t}\r\n\t\t// B: Ensure an `inOpt` value going forward\r\n\t\tinOpt = inOpt || {};\r\n\r\n\t\t// STEP 2: Set `baseUrl`\r\n\t\tif ( inOpt.hasOwnProperty('baseUrl') ) {\r\n\t\t\t_urlBase = ( inOpt.baseUrl.toString().replace(/\\/+$/,'') + '/_api/Web');\r\n\t\t}\r\n\r\n\t\t// STEP 3: Build query URL based on whether its current user (no parameter) or a passed in object\r\n\t\t// NOTE: Use CurrentUser service as it is included in SP-Foundation and will work for everyone\r\n\t\t// ....: (Users will need SP-Enterprise for UserProfiles service to work)\r\n\t\t// NOTE: `_api/Web/GetUserById()` for non-existant users results in a heinous error 500 that chokes jQuery.ajax.fail(),\r\n\t\t// ....: so dont use it, or check user id with `siteusers?$filter` first!\r\n\t\tif      ( inOpt && inOpt.id    ) _urlRest = \"/siteusers?$filter=Id%20eq%20\"+           inOpt.id    +\"&\";\r\n\t\telse if ( inOpt && inOpt.email ) _urlRest = \"/siteusers?$filter=Email%20eq%20%27\"+     inOpt.email +\"%27&\";\r\n\t\telse if ( inOpt && inOpt.login ) _urlRest = \"/siteusers?$filter=LoginName%20eq%20%27\"+ inOpt.login.replace(/#/g,'%23') +\"%27&\";\r\n\t\telse if ( inOpt && inOpt.title ) _urlRest = \"/siteusers?$filter=Title%20eq%20%27\"+     inOpt.title +\"%27&\";\r\n\r\n\t\t// STEP 4: Complete URL\r\n\t\t_urlRest = _urlBase + _urlRest;\r\n\r\n\t\t/**\r\n\t\t* Get user info: (`Id`, `Email`, `IsSiteAdmin`, `LoginName`, `PrincipalType`, `Title`)\r\n\t\t*\r\n\t\t* @example - no args - omitting arguments means \"current user\"\r\n\t\t* sprLib.user().info().then( function(objUser){ console.table(objUser) } );\r\n\t\t*\r\n\t\t* @example - get user by ID\r\n\t\t* sprLib.user({ id:1234 }).info().then( function(objUser){ console.table(objUser) } );\r\n\t\t*\r\n\t\t* @return {Promise} - return `Promise` containing User info object\r\n\t\t*/\r\n\t\t_newUser.info = function() {\r\n\t\t\treturn new Promise(function(resolve, reject) {\r\n\t\t\t\tsprLib.rest({\r\n\t\t\t\t\turl    : _urlRest + \"$select=Id,Title,Email,LoginName,IsSiteAdmin,PrincipalType\",\r\n\t\t\t\t\theaders: { \"Accept\":\"application/json;odata=verbose\" },\r\n\t\t\t\t\ttype   : \"GET\",\r\n\t\t\t\t\tcache  : false\r\n\t\t\t\t})\r\n\t\t\t\t.then(function(arrData){\r\n\t\t\t\t\tvar objUser = {};\r\n\r\n\t\t\t\t\t// A: Gather user properties\r\n\t\t\t\t\t( arrData && Array.isArray(arrData) && arrData[0] && Object.keys(arrData[0]).length > 0 ? Object.keys(arrData[0]) : [] )\r\n\t\t\t\t\t.forEach(function(key,idx){\r\n\t\t\t\t\t\tobjUser[key] = arrData[0][key];\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// B: Resolve results - if user was not found, an empty object is the correct result\r\n\t\t\t\t\tresolve( objUser );\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function(strErr){\r\n\t\t\t\t\treject( strErr );\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t* Get user's groups (`Id`, `Title`)\r\n\t\t*\r\n\t\t* @example\r\n\t\t* sprLib.user().groups().then( function(objUser){ console.table(objUser) } );\r\n\t\t* sprLib.user(1234).groups().then( function(objUser){ console.table(objUser) } );\r\n\t\t*\r\n\t\t* @return {Promise} - Return `Promise` containing Group(s) info (`Id`, `Title`)\r\n\t\t*/\r\n\t\t_newUser.groups = function() {\r\n\t\t\treturn new Promise(function(resolve, reject) {\r\n\t\t\t\tsprLib.rest({\r\n\t\t\t\t\turl    : _urlRest + \"$select=Groups/Id,Groups/Title,Groups/Description,Groups/LoginName,Groups/OwnerTitle&$expand=Groups\",\r\n\t\t\t\t\theaders: { \"Accept\":\"application/json;odata=verbose\" },\r\n\t\t\t\t\ttype   : \"GET\",\r\n\t\t\t\t\tcache  : false\r\n\t\t\t\t})\r\n\t\t\t\t.then(function(arrData){\r\n\t\t\t\t\tvar arrGroups = [];\r\n\r\n\t\t\t\t\t// A: Gather groups\r\n\t\t\t\t\t( arrData && arrData[0] && arrData[0].Groups && arrData[0].Groups.results ? arrData[0].Groups.results : [] )\r\n\t\t\t\t\t.forEach(function(group,idx){\r\n\t\t\t\t\t\tarrGroups.push({\r\n\t\t\t\t\t\t\tId: group.Id,\r\n\t\t\t\t\t\t\tTitle: group.Title,\r\n\t\t\t\t\t\t\tDescription: group.Description,\r\n\t\t\t\t\t\t\tOwnerTitle: group.OwnerTitle,\r\n\t\t\t\t\t\t\tLoginName: group.LoginName\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// B: Resolve results\r\n\t\t\t\t\tresolve( arrGroups );\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function(strErr){\r\n\t\t\t\t\treject( strErr );\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t* Get User Profile properties (SP.UserProfiles.PersonProperties)\r\n\t\t*\r\n\t\t* @example sprLib.user().profile()\r\n\t\t* @example sprLib.user({ id:9 }).profile()\r\n\t\t* @example sprLib.user().profile('AccountName')\r\n\t\t* @example sprLib.user().profile(['AccountName','DisplayName'])\r\n\t\t*\r\n\t\t* @return {Promise} - Return `Promise` containing User Profile info\r\n\t\t*\r\n\t\t* @see: http://sharepoint.stackexchange.com/questions/207422/getting-user-profile-property-with-dash-in-name-with-rest-api\r\n\t\t* @see: [User Profile service](https://msdn.microsoft.com/en-us/library/office/dn790354.aspx)\r\n\t\t* also:\r\n\t\t* /sites/dev/_api/sp.userprofiles.profileloader.getprofileloader/getuserprofile - (The user profile of the current user)\r\n\t\t* /sites/dev/_api/sp.userprofiles.profileloader.getprofileloader/getuserprofile/AccountName\r\n\t\t* /sites/dev/_api/sp.userprofiles.profileloader.getowneruserprofile\r\n\t\t* http://siteurl/_api/SP.UserProfiles.PeopleManager/GetUserProfilePropertyFor(accountName=@v,propertyName='LastName')?@v='i:0%23.f|membership|brent@siteurl.onmicrosoft.com'\r\n\t\t* http://siteurl/_api/SP.UserProfiles.PeopleManager/GetMyProperties?$select=PictureUrl,AccountName\r\n\t\t* sprLib.rest({\r\n\t\t*     url:  '_api/SP.UserProfiles.PeopleManager/GetMyProperties',\r\n\t\t*     queryCols: ['PictureUrl','AccountName']\r\n\t\t* })\r\n\t\t*/\r\n\t\t_newUser.profile = function(arrProfileKeys) {\r\n\t\t\treturn new Promise(function(resolve, reject) {\r\n\t\t\t\tvar arrQueryKeys = (Array.isArray(arrProfileKeys) ? arrProfileKeys : (typeof arrProfileKeys === 'string' ? [arrProfileKeys] : null));\r\n\t\t\t\tvar userAcctName = (inOpt && inOpt.login ? encodeURIComponent(inOpt.login) : null);\r\n\r\n\t\t\t\t// STEP 1: Fetch current/specified User Profile Props\r\n\t\t\t\tPromise.resolve()\r\n\t\t\t\t.then(function(){\r\n\t\t\t\t\t// Per MSDN, the only way to select props is using `AccountName`, so fetch it if it was not passed in\r\n\t\t\t\t\t// Get Login/AccountName when something was passed (as opposed to null/'current user'), but not the AccountName\r\n\t\t\t\t\tif ( inOpt && !inOpt.login ) return sprLib.user( inOpt ).info();\r\n\t\t\t\t})\r\n\t\t\t\t.then(function(objUser){\r\n\t\t\t\t\t// A: Use LoginName if it was just queried\r\n\t\t\t\t\tif ( objUser ) userAcctName = encodeURIComponent(objUser.LoginName);\r\n\r\n\t\t\t\t\t// B: Fetch props\r\n\t\t\t\t\t// NOTE: Just fetch all props (no filter below) as `GetMyProperties?select=SID` returns nothing, but it's present when querying all props\r\n\t\t\t\t\t// NOTE: Both of these queries returns an object of [PersonProperties](https://msdn.microsoft.com/en-us/library/office/dn790354.aspx#bk_PersonProperties)\r\n\t\t\t\t\tif ( !userAcctName ) {\r\n\t\t\t\t\t\treturn sprLib.rest({\r\n\t\t\t\t\t\t\turl: \"_api/SP.UserProfiles.PeopleManager/GetMyProperties\",\r\n\t\t\t\t\t\t\tmetadata: false\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// NOTE: Encode \"#\" to \"%23\" or query fails!\r\n\t\t\t\t\t\t// NOTE: Per MSDN we can only query with `accountName`\r\n\t\t\t\t\t\treturn sprLib.rest({\r\n\t\t\t\t\t\t\turl: \"_api/SP.UserProfiles.PeopleManager/GetPropertiesFor(accountName=@v)?@v='\"+userAcctName+\"'\",\r\n\t\t\t\t\t\t\ttype: 'POST',\r\n\t\t\t\t\t\t\tmetadata: false\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.then(function(arrProfileProps){\r\n\t\t\t\t\tvar objProfile = {};\r\n\r\n\t\t\t\t\t// A: Cases where this fails (bad user, maybe no license?) REST returns {'GetPropertiesFor':null}\r\n\t\t\t\t\tif ( arrProfileProps && arrProfileProps[0] && arrProfileProps[0].hasOwnProperty('GetPropertiesFor') ) resolve( {} );\r\n\r\n\t\t\t\t\t// B: Capture all cols or just the ones specified\r\n\t\t\t\t\tif ( arrProfileProps[0] && Array.isArray(arrQueryKeys) && arrQueryKeys.length > 0 ) {\r\n\t\t\t\t\t\tarrQueryKeys.forEach(function(key){\r\n\t\t\t\t\t\t\tobjProfile[key] = arrProfileProps[0][key] || 'ERROR: No such property exists in SP.UserProfiles.PeopleManager';\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if ( arrProfileProps[0] ) {\r\n\t\t\t\t\t\tobjProfile = arrProfileProps[0];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif (DEBUG) console.log('??? `arrProfileProps[0]` does not exist!');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// C: Clean data\r\n\t\t\t\t\tObject.keys(objProfile).forEach(function(key){\r\n\t\t\t\t\t\t// B.A: Remove `__metadata` and `ValueType` from each property\r\n\t\t\t\t\t\tif ( objProfile[key] && objProfile[key].__metadata ) delete objProfile[key].__metadata;\r\n\t\t\t\t\t\tif ( objProfile[key] && objProfile[key].ValueType  ) delete objProfile[key].ValueType;\r\n\r\n\t\t\t\t\t\t// B.B: Cleanup lookup-type prop values with their own `results` array\r\n\t\t\t\t\t\tif ( key == 'UserProfileProperties' ) { objProfile[key] = objProfile[key].results; }\r\n\r\n\t\t\t\t\t\t// B.C: Elevate `results` to the prop value. EX: `Peers:{__metadata:{...}, results:[]}`` -> `Peers:[]`\r\n\t\t\t\t\t\tif ( objProfile[key] && objProfile[key].results ) { objProfile[key] = objProfile[key].results; }\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// D: Reduce `UserProfileProperties` array of objects to prop name/value\r\n\t\t\t\t\t// EX: [{\"__metadata\":{\"type\":\"SP.KeyValue\"},\"Key\":\"UserProfile_GUID\",\"Value\":\"712d9300-5d61-456b-95d1-123d29e5e0bc\",\"ValueType\":\"Edm.String\"},...]\r\n\t\t\t\t\tif ( objProfile.UserProfileProperties ) {\r\n\t\t\t\t\t\tvar objProfileProps = {};\r\n\t\t\t\t\t\tobjProfile.UserProfileProperties.forEach(function(obj){ objProfileProps[obj.Key] = obj.Value; });\r\n\t\t\t\t\t\tobjProfile.UserProfileProperties = objProfileProps;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// E: Done\r\n\t\t\t\t\tresolve( Object.keys(objProfile).length == 0 ? {} : objProfile );\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function(strErr){\r\n\t\t\t\t\treject(strErr);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// LAST: Return this User to enable chaining\r\n\t\treturn _newUser;\r\n\t}\r\n\r\n\t// API: UTILITY: Token\r\n\tsprLib.renewSecurityToken = function renewSecurityToken() {\r\n\t\treturn doRenewDigestToken();\r\n\t}\r\n\r\n\t// API: NODEJS: Setup\r\n\tsprLib.nodeConfig = function nodeConfig(inOpt) {\r\n\t\tinOpt = (inOpt && typeof inOpt === 'object' ? inOpt : {});\r\n\t\tAPP_OPTS.nodeCookie  = inOpt.cookie || '';\r\n\t\tAPP_OPTS.nodeEnabled = (typeof inOpt.nodeEnabled !== 'undefined' ? inOpt.nodeEnabled : true);\r\n\t\tAPP_OPTS.nodeServer  = inOpt.server || '';\r\n\t}\r\n})();\r\n\r\n// [Node.js] support\r\nif ( NODEJS ) {\r\n\t// A: Set require vars\r\n\tvar https = require(\"https\");\r\n\tvar isElectron = require(\"is-electron\");\r\n\r\n\t// B: Export module\r\n\tmodule.exports = sprLib;\r\n}\r\n"]}